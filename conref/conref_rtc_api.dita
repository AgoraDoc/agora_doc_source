<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="apidef">
    <title>RTC APIs for Reuse</title>
    <body>
                <section id="section_mjq_rgy_vnb">
                        <title>Methods</title>
                        <!--setClientRole-->
                        <p id="setClientRole">
                                <codeblock props="android" outputclass="java">public abstract int setClientRole(int role);</codeblock>
                                <codeblock props="ios" outputclass="objective-c">- (int)setClientRole:(AgoraClientRole)role;</codeblock>
                                <codeblock props="windows" outputclass="language-cpp">virtual int setClientRole(CLIENT_ROLE_TYPE role) = 0;</codeblock>
                        </p>
                        <!--joinChannel-->
                        <p id="join">
                                <codeblock props="android" outputclass="java">public abstract int joinChannel(String token, String channelName, String optionalInfo, int optionalUid);</codeblock>
                                <codeblock props="windows" outputclass="language-cpp">virtual int joinChannel(const char* token, const char* channelId, const char* info, uid_t uid) = 0;</codeblock>
                        </p>
                        <!--setChannelProfile-->
                        <p id="setChannelProfile">
                                <codeblock props="android" outputclass="java">public abstract int setChannelProfile(int profile);</codeblock>
                                <codeblock props="windows" outputclass="language-cpp">virtual int setChannelProfile(CHANNEL_PROFILE_TYPE profile) = 0;</codeblock>
                        </p>
                        <!--setVideoEncoderConfiguration-->
                        <p id="setVideoEncoderConfiguration">
                                <codeblock outputclass="language-cpp" props="windows">virtual int setVideoEncoderConfiguration(const VideoEncoderConfiguration&amp; config) = 0;</codeblock>
                        </p>
                        <!--setLiveTranscoding-->
                        <p id="setLiveTranscoding">
                                <codeblock props="windows" outputclass="language-cpp">virtual int setLiveTranscoding(const LiveTranscoding &amp;transcoding) = 0;</codeblock>
                        </p>
                        <!--enableAudio-->
                        <p id="enableAudio">
                                <codeblock outputclass="language-cpp" props="rust"/>
                        </p>
                        <!--muteLocalVideoStream-->
                        <p id="muteLocalVideoStream">
                                <codeblock props = "windows" outputclass="language-cpp">virtual int agora::rtc::IRtcEngine::muteLocalVideoStream(bool mute) = 0; </codeblock>
                                <codeblock props = "rust" outputclass="rust">pub fn mute_local_video_stream(&amp;self, mute: bool) -> i32 {
                                        unsafe {
                                        let m: i32 = if mute { 1 } else { 0 };
                                        return agorartcnative::muteLocalVideoStream(self.native_engine, m);
                                        }
                                        } </codeblock>
                        </p>      
                </section>

<section>
                        <title>Callbacks</title>
                        <!--onClientRoleChanged-->                <p id="onClientRoleChanged">
                        <codeblock props="android" outputclass="java">public void onClientRoleChanged(int oldRole, int newRole);</codeblock>
                        <codeblock props="ios" outputclass="objective-c">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine didClientRoleChanged:(AgoraClientRole)oldRole newRole:(AgoraClientRole)newRole;</codeblock>
                                <codeblock props="windows">virtual void agora::rtc::IRtcEngineEventHandler::onClientRoleChanged(CLIENT_ROLE_TYPE oldRole, CLIENT_ROLE_TYPE newRole)	</codeblock>
                </p></section>
<section>
                        <title>Classes</title>
                        <!--LiveTranscoding-->                
        <p id="LiveTranscoding">
                                <codeblock props="windows" outputclass="language-cpp">typedef struct LiveTranscoding {
        int width;
        int height;
        int videoBitrate;
        int videoFramerate;
        
        bool lowLatency;
        
        int videoGop;
        VIDEO_CODEC_PROFILE_TYPE videoCodecProfile;
        unsigned int backgroundColor;
        unsigned int userCount;
        TranscodingUser *transcodingUsers;
        const char *transcodingExtraInfo;
        RtcImage* watermark;
        
        AUDIO_SAMPLE_RATE_TYPE audioSampleRate;
        int audioBitrate;
        int audioChannels;
        
        LiveTranscoding()
        : width(360)
        , height(640)
        , videoBitrate(400)
        , videoFramerate(15)
        , lowLatency(false)
        , backgroundColor(0x000000)
        , videoGop(30)
        , videoCodecProfile(VIDEO_CODEC_PROFILE_HIGH)
        , userCount(0)
        , transcodingUsers(nullptr)
        , transcodingExtraInfo(nullptr)
        , watermark(nullptr)
        , audioSampleRate(AUDIO_SAMPLE_RATE_48000)
        , audioBitrate(48)
        , audioChannels(1)
        {}
 } LiveTranscoding;</codeblock>
                        <codeblock props="android" outputclass="java">agora::rtc::LiveTranscoding::LiveTranscoding()</codeblock>
                </p>
                        <!--VIDEO_CODEC_PROFILE_TYPE-->
                        <p id="VideoCodecProfileType">
                                <codeblock outputclass="language-cpp" props="windows">enum agora::rtc::VIDEO_CODEC_PROFILE_TYPE</codeblock>
                        </p></section>

        </body>
</topic>

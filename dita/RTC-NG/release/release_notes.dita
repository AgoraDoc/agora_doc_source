<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="release_notes">
    <title/>
    <topic id="level2">
        <title>v4.2.3</title>
        <body>
            <p>该版本于 2023 年 9 月 x 日发布。</p>
        </body>
        <topic id="level3">
            <title/>
            <topic id="compatibility">
                <title>升级必看</title>
                <body>
                    <ol>
                        <li><ph><b>升级必看的标题</b></ph>
                            <ul>
                            <li><?oxy-placeholder content="用 list 描述"?></li>
                            <li><?oxy-placeholder content="用 list 描述"?></li>
                            </ul></li>
                        <li><ph><b>升级必看的标题</b></ph>
                            <p><?oxy-placeholder content="用段落描述"?></p>
                        </li>
                    </ol>
                </body>
            </topic>
            <topic id="newfeature">
                <title>新增特性</title>
                <body>
                    <ol>
                        <li><ph><b><b>视频截图上传更新</b></b></ph>
                            <p><ph>为方便接入声网云市场提供的第三方视频审核服务，该版本有以下改动：</ph>
                                <ul>
                                    <li props="cpp apple unity rn flutter"><apiname keyref="CONTENT_INSPECT_TYPE"/> 中新增 <apiname keyref="CONTENT_INSPECT_IMAGE_MODERATION"/> 枚举值，代表使用声网云市场视频审核插件对视频截图并上传。</li>
                                    <li props="android"><apiname keyref="ContentInspectModule"/> 中的 <codeph>type</codeph> 新增 <apiname keyref="CONTENT_INSPECT_IMAGE_MODERATION"/> 枚举值，代表使用声网云市场视频审核插件对视频截图并上传。</li>
                                    <li><apiname keyref="ContentInspectConfig"/> 中新增的 <codeph>serverConfig</codeph> 可选参数用于云市场视频截图上传相关服务端配置，配置后可同时接入多个云市场审核插件并实现灵活控制插件开关等功能，详情请<ph keyref="ticket-link"/>。</li>
                                </ul>
                                <ph>此外，该版本还新增了 <apiname keyref="enableContentInspectEx"/> 方法，支持同时对多条视频流截图并上传。</ph>
                            </p>
                        </li>
                        <li props="cpp"><ph><b>支持 ID3D11Texture2D 渲染</b></ph>
                            <p>自该版本起，SDK 支持 ID3D11Texture2D 类型的视频格式，提升了游戏场景中视频帧的渲染效果。你可以在调用 <apiname keyref="pushVideoFrame"/> 方法将外部原始视频帧推送到 SDK 时，设置 <parmname>format</parmname> 为 <codeph>VIDEO_TEXTURE_ID3D11TEXTURE2D</codeph>；并通过设置 <parmname>*d3d11_texture_2d</parmname> 和 <parmname>texture_slice_index</parmname> 属性，来确定要使用的 ID3D11Texture2D 纹理对象。</p>
                        </li>
                        <li props="cpp"><ph><b>本地视频状态错误码更新</b></ph>
                            <p>为了帮助用户在屏幕共享场景下了解本地视频出错的准确原因，<apiname keyref="onLocalVideoStateChanged"/> 回调中新增了如下几组枚举：
                            <ul>
                            <li><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_PAUSED"/>(23)：屏幕采集已暂停。当前屏幕可能已切换到安全桌面，例如 UAC 对话框或者 Winlogon 桌面。</li>
                            <li><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_RESUMED"/>(24)：屏幕采集已从暂停状态中恢复。</li>
                            <li><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_HIDDEN"/>(25)：当前屏幕采集的窗口处于隐藏状态，并且在当前屏幕上不可见。</li>
                            <li><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_RECOVER_FROM_HIDDEN"/>(26)：进行屏幕采集的窗口已经从隐藏状态中恢复。</li>
                            <li><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_RECOVER_FROM_MINIMIZED"/>(27)：进行屏幕采集的窗口已经从最小化状态中恢复。</li>
                            </ul></p>
                        </li>
                    </ol>
                </body>
            </topic>
            <topic id="improvement">
                <title>改进</title>
                <body>
                    <ol>
                        <li><ph><b>优化虚拟背景内存占用</b></ph>
                            <p>该版本升级了虚拟背景算法，降低了虚拟背景功能的内存占用。相比之前的版本，在低端机上使用虚拟背景功能时 App 运行占用的内存降低了约 4%~10%（具体数值取决于设备型号和平台）。</p>
                        </li>
                        <li props="cpp android"><ph><b>屏幕共享场景优化</b></ph>
                            <p props="cpp">该版本优化了在超高清（4K，60 fps）游戏共享场景下的性能和编码效率，有效降低了屏幕共享时系统资源占用率。</p>
                            <p props="android">该版本优化了屏幕共享场景下的视频编码配置。当用户自定义视频的 <codeph>width</codeph> 和 <codeph>height</codeph> 属性时，SDK 会在保持视频与屏幕的宽高比一致的前提下，对实际的编码分辨率进行向下取整，确保最终编码分辨率不超过用户自定义的编码分辨率，从而提升了对屏幕共享流的计费准确性。</p>
                        </li>
                    </ol>
                    <p><b>其他改进</b></p>
                    <p>该版本还进行了如下改进：
                        <ul>
                        <li props="android">优化了 SDK 采集和自定义视频采集场景下 Texture Buffer 的管理方式，有效消除丢帧和崩溃隐患。</li>
                         <li>当调用 <apiname keyref="setPlaybackSpeed"/> 设置音频文件的播放进度时，传入非法参数后会返回错误码 -2，表示方法中设置了无效的参数，需要重新设置参数。</li>
                         <li>优化了 Token 解析时的逻辑，避免传入非法 Token 后 App 发生崩溃。</li>
                        </ul></p>
                </body>
            </topic>
            <topic id="bugfix">
                <title>问题修复</title>
                <body>
                    <p>该版本修复了以下问题：</p>
                    <ul>
                        <li props="cpp">在屏幕共享场景下偶现崩溃、掉帧。</li>
                        <li props="android">在采用 H.265 编码模式时，如果 Web 端加入互动，会导致 Native 端出现冗余的  <apiname keyref="onUserEnableLocalVideo"/> 回调：当主播调用 <codeph><apiname keyref="enableLocalVideo"/>(true)</codeph>时，接收端在收到 <apiname keyref="onUserEnableLocalVideo"/> (<codeph>enabled</codeph> 为 <codeph>true</codeph>) 回调之前，会先收到一个 <apiname keyref="onUserEnableLocalVideo"/> (<codeph>enabled</codeph> 为 <codeph>false</codeph>) 回调。</li>
                        <li props="mac unity flutter electron unreal bp"><p><ph>加入频道偶现的崩溃。</ph><ph>(macOS)</ph></p></li>
                        <li>本地系统时间不正确时，偶现加入频道失败。</li>
                        <li>调用 playEffect 使用相同的 soundId 播放两个不同的音效文件，偶现第一个音效文件播放完毕后会重复播放。</li>
                        <li props="android unity flutter rn unreal bp"><p><ph>主播调用 <apiname keyref="startAudioMixing2"/> 播放音乐文件时，偶现主播本地无法听见音乐，远端用户可以正常听见。</ph><ph props="unity flutter rn unreal bp">(Android)</ph></p></li>
                        <li props="android ios unity flutter rn unreal bp"><p><ph>合唱场景下，调用 <apiname keyref="preload"/> 加载音乐，偶现加载失败。</ph><ph props="unity flutter unreal bp">(Android, iOS)</ph></p></li>
                        <li props="android unity flutter rn unreal bp"><p><ph>在特定机型上开启 AI 降噪偶现崩溃。</ph><ph props="unity flutter rn unreal bp">(Android)</ph></p></li>
                        <li props="android ios unity flutter rn unreal bp"><p><ph>当本地系统时间不准确时，歌曲榜单加载失败。</ph><ph props="unity flutter unreal bp">(Android, iOS)</ph></p></li>
                        <li>调用一次 takeSnapshotEx 获取视频截图会收到多次 onSnapshotTaken 视频截图结果回调。</li>
                        <li props="android unity flutter rn"><p><ph>在仅调用 <apiname keyref="joinChannelEx"/> 加入的频道中，调用 <apiname keyref="setEnableSpeakerphone"/> 无法将音频路由从扬声器切换至听筒。</ph><ph props="unity flutter rn">(Android)</ph></p></li>
                    </ul>
                </body>
            </topic>
            <topic id="apichange">
                <title>API 变更</title>
                <body>
                    <p><b>新增</b>
                        <ul>
                        <li><codeph><apiname/></codeph></li>
                        <li props="cpp"><apiname keyref="onLocalVideoStateChanged"/> 中新增如下枚举：
                            <ul>
                            <li><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_PAUSED"/></li>
                            <li><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_RESUMED"/></li>
                            <li><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_HIDDEN"/></li>
                            <li><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_RECOVER_FROM_HIDDEN"/></li>
                            <li><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_RECOVER_FROM_MINIMIZED"/></li>
                            </ul></li>
                        <li><apiname keyref="ExternalVideoFrame"/> 中新增 <codeph>d3d11_texture_2d</codeph> 和 <codeph>texture_slice_index</codeph> 成员</li>
                        <li><apiname keyref="VIDEO_PIXEL_FORMAT"/> 中新增 <apiname keyref="VIDEO_TEXTURE_ID3D11TEXTURE2D"/> 枚举</li>
                        <li><apiname keyref="enableContentInspectEx"/></li>
                        <li props="cpp apple rn unity flutter"><apiname keyref="CONTENT_INSPECT_TYPE"/> 新增 <apiname keyref="CONTENT_INSPECT_IMAGE_MODERATION"/> </li>
                        <li props="android"><apiname keyref="ContentInspectModule"/> 中的 <codeph>type</codeph> 新增 <apiname keyref="CONTENT_INSPECT_IMAGE_MODERATION"/> </li>
                        <li><apiname keyref="ContentInspectConfig"/> 中新增 <codeph>serverConfig</codeph> 可选参数</li>
                        <li><apiname keyref="isFeatureAvailableOnDevice"/></li>
                        <li><apiname keyref="FeatureType"/></li>
                        </ul></p>
                    <p><b>修改</b>
                        <ul>
                        <li><apiname/></li>
                        </ul></p>
                    <p><b>废弃</b>
                        <ul>
                        <li><apiname/></li>
                        </ul></p>
                    <p><b>删除</b>
                        <ul>
                        <li><apiname/></li>
                        </ul></p>
                </body>
            </topic>
        </topic>
    </topic>
</topic>

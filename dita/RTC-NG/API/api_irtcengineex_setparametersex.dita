<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_setparametersex">
    <title><ph keyref="setParametersEx"/></title>
    <shortdesc id="short"><ph id="shortdesc">使用连接 ID 向 SDK 传入 JSON 配置信息，用于提供技术预览或特别定制功能。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setParametersEx"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">  public abstract int setParametersEx(String parameters, RtcConnection connection);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setParametersEx:(NSString * _Nonnull)options connection:(AgoraRtcConnection * _Nonnull)connection NS_SWIFT_NAME(setParametersEx(_:connection:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setParametersEx(const RtcConnection&amp; connection, const char* parameters) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setParametersEx(
    {required RtcConnection connection, required String parameters});</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从</dt>
                <dd>v4.3.0</dd>
            </dlentry>
            </dl>
            <p>请<xref keyref="ticket-link" />获取 JSON 配置方式。</p>
        </section>
        <section id="scenario">
            <title>适用场景</title>
            <p>该方法适用于在多频道场景下，对不同频道针对性传递 JSON 配置信息，而非对所有频道统一配置。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>parameters</pt>
                <pd>JSON 字符串形式的参数。</pd>
            </plentry>           
            <plentry conkeyref="joinChannelEx/connection" >
                <pt />
                <pd />
            </plentry>
            </parml> 
        </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
                <li props="native electron unity rn">0: 方法调用成功。</li>
                <li>&lt; 0: 方法调用失败。</li>
                </ul> </section>
        </refbody>
</reference>

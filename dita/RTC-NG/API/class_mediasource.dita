<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_mediasource">
    <title><ph keyref="MediaSource"/></title>
    <shortdesc id="short"><ph id="shortdesc">需播放的媒体文件的相关信息及播放设置。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <codeblock props="android" outputclass="language-java">public class MediaPlayerSource {
  public MediaPlayerSource() {
    this.startPos = 0;
    this.enableCache = false;
    this.url = null;
    this.uri = null;
    this.autoPlay = true;
    this.provider = null;
  }
  String url;
  String uri;
  long startPos;
  boolean autoPlay;
  Boolean isAgoraSource;
  Boolean isLiveSource;
  boolean enableCache;
  IMediaPlayerCustomDataProvider provider;
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraMediaSource : NSObject
@property(copy, nonatomic) NSString *_Nullable url;
@property(copy, nonatomic) NSString *_Nullable uri;
@property(assign, nonatomic) NSUInteger startPos;
@property(assign, nonatomic) BOOL enableCache;
@property(assign, nonatomic) BOOL autoPlay;
@property(strong, nonatomic) AgoraRtcBoolOptional* _Nullable isAgoraSource;
@property(strong, nonatomic) AgoraRtcBoolOptional* _Nullable isLiveSource;
@property(copy, nonatomic) AgoraRtcMediaPlayerCustomSourceOnReadCallback _Nonnull playerOnReadCallback;
@property(copy, nonatomic) AgoraRtcMediaPlayerCustomSourceOnSeekCallback _Nonnull playerOnSeekCallback;
@end
@end</codeblock>
            <codeblock props="cpp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </section>
        <section id="parameters">
            <title><text
            conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"
            /></title>
            <parml>
            <plentry>
                <pt>url</pt>
                <pd>需要播放的媒体资源的 URL。</pd>
            </plentry>
            <plentry>
                <pt>uri</pt>
                <pd>媒体文件的 URI，为缓存文件的唯一标识。</pd>
            </plentry>
            <plentry>
                <pt>startPos</pt>
                <pd>设置起始播放位置 (毫秒)，默认值为 0。</pd>
            </plentry>
            <plentry>
                <pt>autoPlay</pt>
                <pd>设置是打开媒体文件后，是否开启自动播放：
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>：（默认）开启自动播放。</li>
                    <li><codeph><ph keyref="false"/></codeph>：关闭自动播放。</li>
                    </ul>
                <note><p>如果你设置关闭自动播放，则打开媒体文件后，需要调用 <parmname>play</parmname>方法来播放媒体文件。</p></note></pd>
            </plentry>
            <plentry>
                <pt>enableCache</pt>
                <pd>此次播放是否需要预先缓存媒体文件：
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>：开启预先缓存。</li>
                    <li><codeph><ph keyref="false"/></codeph>：（默认）关闭预先缓存。</li>
                    </ul>
                <note><p>如果你将该参数设置为 <codeph><ph keyref="true"></ph></codeph>，播放器会预先缓存媒体文件数据，下次播放该文件时播放器会直接从缓存中加载数据。如需开启预先缓存，请设置 <parmname>uri</parmname> 参数，否则播放器会以媒体文件的 <parmname>url</parmname> 作为缓存索引。</p></note></pd>
            </plentry>
            <plentry>
                <pt>isAgoraSource</pt>
                <pd>打开的媒体资源是否为通过 Agora 融合 CDN 分发的直播或点播流：
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>：打开的媒体资源是 Agora 融合 CDN 分发的直播或点播流。</li>
                    <li><codeph><ph keyref="false"/></codeph>：（默认）打开的媒体资源不是 Agora 融合 CDN 分发的直播或点播流。</li>
                    </ul>
                    <note>
                    <p>如果你需要打开的媒体资源为 Agora 融合 CDN 分发的直播流或点播流，请在 <parmname>url</parmname> 参数中传入直播或点播流的 URL 并将 <parmname>isAgoraSource</parmname>设置为 <codeph><ph keyref="true"/></codeph>，否则无需设置该参数。</p>
                    </note></pd>
            </plentry>
            <plentry>
                <pt>isLiveSource</pt>
                <pd>打开的媒体资源是否为直播流：
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>：直播流。</li>
                    <li><codeph><ph keyref="false"/></codeph>：（默认）非直播流。</li>
                    </ul>
                    <p>如果你打开的媒体资源为直播流，Agora 推荐你将该参数设置为 <codeph><ph keyref="true"/></codeph>，可加快媒体资源的开播速度。</p>
                    </pd>
            </plentry>
            <plentry props="android">
                <pt>provider</pt>
                <pd>
                    <p>自定义媒体资源文件的回调。详见 <xref keyref="IMediaPlayerCustomDataProvider"/>。</p>
                    <note>
                    <p>如果你需要打开自定义的媒体资源，例如需要自行解密的媒体资源，直接设置 <parmname>provider</parmname> 参数即可，无需再设置 <parmname>url</parmname> 参数。</p>
                    </note></pd>
            </plentry>
            <plentry props="ios">
                <pt>playerOnReadCallback</pt>
                <pd>详见 <xref keyref="onReadData"/>。</pd>
            </plentry>
            <plentry props="ios">
                <pt>playerOnSeekCallback</pt>
                <pd>详见 <xref keyref="onSeek"/>。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>

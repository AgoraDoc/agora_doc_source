<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_loadgame">
    <title><ph keyref="loadGame"/></title>
    <shortdesc id="short"><ph id="shortdesc">加载游戏并注册回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="loadGame"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public synchronized int loadGame(@NonNull GameOptions options, @NonNull ViewGroup container);
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (AGEErrorCode)loadGameWithOptions:(AGEGameOptions *)options view:(UIView *)view NS_SWIFT_NAME(loadGame(options:view:));
</codeblock>
            <codeblock props="cpp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc">
            <p>如果你在此之前已经加载了游戏，则调用此方法后会重新加载游戏。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>options</pt>
                <pd>加载游戏所需的参数。详见 <xref keyref="GameOptions"/>。</pd>
            </plentry>
            <plentry>
                <pt props="android">container</pt>
                <pt props="ios">view</pt>
                <pd>游戏容器。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>返回值</title>
            <ul>
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setremotesubscribefallbackoption">
     <title> <ph keyref="setRemoteSubscribeFallbackOption" /> </title>
     <shortdesc id="short"><ph id="shortdesc">Sets the fallback option for the remotely subscribed video stream based on the network conditions.</ph></shortdesc>
     <prolog>
          <metadata>
               <keywords>
                    <indexterm keyref="setRemoteSubscribeFallbackOption" />
               </keywords>
          </metadata>
     </prolog>
     <refbody>
          <section id="prototype">
               <p outputclass="codeblock">
               <codeblock props="android" outputclass="language-java">public abstract int setRemoteSubscribeFallbackOption(int option);</codeblock>
               <codeblock props="ios mac" outputclass="language-objectivec">- (int)setRemoteSubscribeFallbackOption:(AgoraStreamFallbackOptions)option;</codeblock>
               <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setRemoteSubscribeFallbackOption(STREAM_FALLBACK_OPTIONS option) = 0;</codeblock>
               <codeblock props="electron" outputclass="language-typescript">abstract setRemoteSubscribeFallbackOption(
    option: StreamFallbackOptions
  ): number;</codeblock>
               <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetRemoteSubscribeFallbackOption(STREAM_FALLBACK_OPTIONS option);</codeblock>
               <codeblock props="rn" outputclass="language-typescript">abstract setRemoteSubscribeFallbackOption(
    option: StreamFallbackOptions
  ): number;</codeblock>
               <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setRemoteSubscribeFallbackOption(StreamFallbackOptions option);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
          </section>
          <section id="detailed_desc">
            <title>Details</title>
               <p>An unstable network affects the audio and video quality in a video call or interactive live video streaming. If option is set as<apiname keyref="STREAM_FALLBACK_OPTION_VIDEO_STREAM_LOW"/>  or<apiname keyref="STREAM_FALLBACK_OPTION_AUDIO_ONLY"/> , the SDK automatically switches the video from a high-quality stream to a low-quality stream or disables the video when the downlink network conditions cannot support both audio and video to guarantee the quality of the audio. <parmname></parmname>The SDK monitors the network quality and restores the video stream when the network conditions improve.</p>
               <p>When the remote video stream falls back to audio-only or when the audio-only stream switches back to the video, the SDK triggers the<xref keyref="onRemoteSubscribeFallbackToAudioOnly"/>  callback.</p>
               <note type="attention">Ensure that you call this method before joining a channel.</note> </section>
          <section id="parameters">
               <title>Parameters</title>
               <parml>
               <plentry>
                    <pt>option</pt>
                    <pd><xref keyref="STREAM_FALLBACK_OPTIONS" /><ph>订阅流的回退选项。 </ph>See .<ph props="ios mac cpp unreal bp electron unity flutter rn cs"></ph><ul props="android">
                         <li><ph keyref="STREAM_FALLBACK_OPTION_DISABLED" />(0): No fallback behavior for the local/remote video stream when the uplink/downlink network conditions are poor. The quality of the stream is not guaranteed.</li>
                         <li><ph keyref="STREAM_FALLBACK_OPTION_VIDEO_STREAM_LOW" />（默认）(1): 网络条件较差时，只接收视频小流（低分辨率、低码率视频流）。</li>
                         <li><ph keyref="STREAM_FALLBACK_OPTION_AUDIO_ONLY" />(2): 网络条件较差时，先尝试只接收视频小流；如果因网络环境太差无法显示视频，则再回退到只接收订阅的音频流。</li>
                         </ul></pd>
               </plentry>
               </parml> </section>
          <section id="return_values">
               <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; and you need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
               <ul props="native unreal bp electron unity rn cs">
               <li>0: Success.</li>
               <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
               </ul> </section>
     </refbody>
</reference>
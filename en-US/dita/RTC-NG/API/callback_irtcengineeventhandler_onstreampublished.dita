<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onstreampublished">
    <title><ph keyref="onStreamPublished" /></title>
    <shortdesc id="short"><ph id="shortdesc">Occurs when an RTMP or RTMPS stream is published.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onStreamPublished" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onStreamPublished(String url, int error) {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine
    streamPublishedWithUrl:(NSString * _Nonnull)url
    errorCode:(AgoraErrorCode)errorCode;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual void onStreamPublished(const char *url, int error) {
    (void)url;
    (void)error;
    }</codeblock>
            <codeblock props="electron" outputclass="language-typescript">onStreamPublished?(url: string, error: ErrorCodeType): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnStreamPublished(string url, int error)</codeblock>
            <codeblock props="rn" outputclass="language-typescript">onStreamPublished?(url: string, error: ErrorCodeType): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(String url, ErrorCodeType error)? onStreamPublished;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="deprecated">
            <dlentry>
                <dt>Deprecated:</dt>
                <dd>Use <xref keyref="onRtmpStreamingStateChanged" /> instead.</dd>
            </dlentry>
            </dl>
            <p>Reports the result of publishing an RTMP or RTMPS stream.</p>
        </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title" /></title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt />
                <pd />
            </plentry>
            <plentry>
                <pt>url</pt>
                <pd>The CDN streaming URL.</pd>
            </plentry>
            <plentry>
                <pt props="android cpp unity flutter electron rn cs">error</pt>
                <pt props="ios mac">errorCode</pt>
                <pd>
                    <p>Error codes of the RTMP or RTMPS streaming.<ul>
                    <li><codeph>ERR_OK</codeph> (0): The publishing succeeds.</li>
                    <li><codeph>ERR_FAILED</codeph> (1): The publishing fails.</li>
                    <li>ERR_INVALID_ARGUMENT (-2): <codeph>Invalid argument</codeph> used. If you do not call<xref keyref="addPublishStreamUrl" />  to configure  before calling<xref keyref="setLiveTranscoding" /><xref keyref="LiveTranscoding" /> , the SDK reports <codeph>ERR_INVALID_ARGUMENT</codeph>.</li>
                    <li><codeph>ERR_TIMEDOUT</codeph> (10): The publishing timed out.</li>
                    <li>ERR_ALREADY_IN_USE (19): The chosen URL address is already <codeph>in use</codeph> for CDN live streaming.</li>
                    <li>ERR_ENCRYPTED_STREAM_NOT_ALLOWED_PUBLISH (130): You cannot <codeph>publish an encrypted stream</codeph>.</li>
                    <li><codeph>ERR_PUBLISH_STREAM_CDN_ERROR</codeph> (151): CDN related error. <xref keyref="removePublishStreamUrl" />Remove the original URL address and add a new one by<xref keyref="addPublishStreamUrl" /> calling the  and  methods.</li>
                    <li><codeph>ERR_PUBLISH_STREAM_NUM_REACH_LIMIT</codeph> (152): The host manipulates more than 10 URLs. Delete the unnecessary URLs before adding new ones.</li>
                    <li><codeph>ERR_PUBLISH_STREAM_NOT_AUTHORIZED</codeph> (153): The host manipulates other hosts' URLs. Please check your app logic.</li>
                    <li><codeph>ERR_PUBLISH_STREAM_INTERNAL_SERVER_ERROR</codeph> (154): An error occurs in Agora's streaming server. Call the<xref keyref="removePublishStreamUrl" />  method to publish the streaming again.</li>
                    <li>ERR_PUBLISH_STREAM_FORMAT_NOT_SUPPORTED (156): The format of the CDN streaming URL is <codeph>not supported</codeph>. Check whether the URL format is correct.</li>
                    </ul> </p>
                </pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
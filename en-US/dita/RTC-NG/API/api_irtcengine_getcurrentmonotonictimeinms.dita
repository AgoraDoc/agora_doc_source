<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_getcurrentmonotonictimeinms">
    <title><ph keyref="getCurrentMonotonicTimeInMs"/></title>
    <shortdesc id="short"><ph id="shortdesc">Gets the current Monotonic Time of the SDK.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getCurrentMonotonicTimeInMs"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract long getCurrentMonotonicTimeInMs();</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int64_t)getCurrentMonotonicTimeInMs NS_SWIFT_NAME(getCurrentMonotonicTimeInMs());</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int64_t getCurrentMonotonicTimeInMs() = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract getCurrentMonotonicTimeInMs(): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract long GetCurrentMonotonicTimeInMs();</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract getCurrentMonotonicTimeInMs(): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;int> getCurrentMonotonicTimeInMs();</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.2.0</dd>
            </dlentry>
            </dl>
            <p>Monotonic Time refers to a monotonically increasing time series whose value increases over time. The unit is milliseconds.</p>
            <p>In custom video capture and custom audio capture scenarios, in order to ensure audio and video synchronization, Agora recommends that you call this method to obtain the current Monotonic Time of the SDK, and then pass this value into the timestamp parameter in the captured video frame (<xref keyref="VideoFrame"/>) and audio frame (<xref keyref="AudioFrame"/>).</p>
        </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native electron unity rn">â‰¥0: The method call is successful, and returns the current Monotonic Time of the SDK (in milliseconds).</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaengine_registervideoencodedframeobserver">
    <title><ph keyref="registerVideoEncodedFrameObserver" /></title>
    <shortdesc id="short"><ph id="shortdesc">Registers a receiver object for the encoded video image.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="registerVideoEncodedFrameObserver" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp" outputclass="language-cpp">virtual int playAllEffects(int loopCount, double pitch, double pan, int gain, bool publish = false) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract playAllEffects(
    loopCount: number,
    pitch: number,
    pan: number,
    gain: number,
    publish?: boolean
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int PlayAllEffects(int loopCount, double pitch, double pan, int gain, bool publish = false);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract playAllEffects(
    loopCount: number,
    pitch: number,
    pan: number,
    gain: number,
    publish?: boolean
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; playAllEffects(
    {required int loopCount,
    required double pitch,
    required double pan,
    required int gain,
    bool publish = false});</codeblock>
            <codeblock props="unreal" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <note type="attention">
            <ul>
            <li>Call this method after joining a channel.</li>
            <li>If you register an <xref keyref="IVideoEncodedFrameObserver" /> object, you cannot register an <xref keyref="IVideoFrameObserver" /> object.</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="ios mac">delegate</pt>
                <pt props="android">receiver</pt>
                <pt props="cpp electron rn flutter">observer</pt>
                <pt props="unity">videoEncodedImageReceiver</pt>
                <pd props="android cpp unity rn electron flutter">The video frame observer object. See <xref keyref="IVideoEncodedFrameObserver" />.</pd>
                <pd props="ios mac">The observer object instance. See <xref keyref="IVideoEncodedFrameObserver" />. Set the value as <ph keyref="NULL" /> to release the instance.</pd>
            </plentry>
            <plentry props="unity">
                <pt>mode</pt>
                <pd>The video data callback mode. See <xref keyref="OBSERVER_MODE" />.</pd>
            </plentry>
                <plentry props="unity">
                    <pt>mode</pt>
                    <pd>The video data callback mode. See <xref keyref="OBSERVER_MODE" />.</pd>
                </plentry>
            </parml> </section>
        <section id="return_values" props="native electron rn">
            <title>Returns</title>
            <ul props="android cpp electron rn">
            <li>0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul>
            <ul props="mac ios">
            <li><codeph><ph keyref="true" /></codeph>: Success.</li>
            <li><codeph><ph keyref="false" /></codeph>: Failure.</li>
            </ul> </section>
    </refbody>
</reference>
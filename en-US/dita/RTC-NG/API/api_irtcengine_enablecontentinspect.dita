<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_enablecontentinspect">
    <title><ph keyref="enableContentInspect"/></title>
    <shortdesc id="short"><ph id="shortdesc">Enables or disables video screenshot and upload.</ph><ph id="shortdesc"></ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableContentInspect"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int enableContentInspect(boolean enabled, ContentInspectConfig config);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)enableContentInspect:(BOOL)enabled config:(AgoraContentInspectConfig* _Nonnull)config;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int enableContentInspect(bool enabled, const media::ContentInspectConfig &amp;config) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract enableContentInspect(
    enabled: boolean,
    config: ContentInspectConfig
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int EnableContentInspect(bool enabled, ContentInspectConfig config);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract enableContentInspect(
    enabled: boolean,
    config: ContentInspectConfig
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> enableContentInspect(
      {required bool enabled, required ContentInspectConfig config});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p><xref keyref="ContentInspectConfig"/>When video screenshot and upload function is enabled, the SDK takes screenshots and upload videos sent by local users based on the type and frequency of the module you set in <xref keyref="ContentInspectConfig"/>. After video screenshot and upload, the Agora server sends the callback notification to your app server in HTTPS requests and sends all screenshots to the third-party cloud storage service.</p>
            <note><xref keyref="ticket-link"/>Before calling this method, ensure that you have contacted <xref keyref="ticket-link"/> to activate the video screenshot upload service.</note> 
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry id="enabled">
                <pt>enabled</pt>
                <pd>Whether to enable <ph>video screenshot and upload</ph><ph props="hide">video content moderation</ph>:<ph></ph><ph props="hide"></ph><ul>
                    <li><ph keyref="true"/><codeph><ph keyref="true"/></codeph>: Enables video screenshot and upload.<codeph></codeph></li>
                    <li><ph keyref="false"/><codeph><ph keyref="false"/></codeph>: Disables video screenshot and upload.<codeph></codeph></li>
                    </ul></pd>
            </plentry>
            <plentry id="config">
                <pt>config</pt>
                <pd><ph><xref keyref="ContentInspectConfig"/></ph><ph>Configuration of video screenshot and upload. See <xref keyref="ContentInspectConfig"/>.</ph><note><ph keyref="CONTENT_INSPECT_SUPERVISE"/><ph keyref="moderation"/>When the video moderation module is set to video moderation via Agora self-developed extension(<ph keyref="CONTENT_INSPECT_SUPERVISE"/>), the video screenshot and upload dynamic library <codeph><ph keyref="moderation"/></codeph> is required. Deleting this library disables the screenshot and upload feature. <codeph></codeph></note>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter"><xref keyref="AgoraRtcException"/><xref keyref="error-code-link"/>When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; and you need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph><ph props="cn"></ph></p>
            <ul>
            <li props="native unreal bp unity rn electron cs">0: Success.</li>
            <li><xref keyref="error-code-link"/>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph><ph props="cn"></ph></li>
            </ul></section>
    </refbody>
</reference>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_iaudioframeobserverbase_getrecordaudioparams">
    <title><ph keyref="getRecordAudioParams"/></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the<xref keyref="onRecordAudioFrame"/> audio format for the  callback.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getRecordAudioParams"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract AudioParams getRecordAudioParams();</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (AgoraAudioParams* _Nonnull)getRecordAudioParams NS_SWIFT_NAME(getRecordAudioParams());</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual AudioParams getRecordAudioParams() = 0;</codeblock>
            <codeblock props="cs" outputclass="language-csharp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity" outputclass="language-csharp">public virtual AudioParams GetRecordAudioParams()
        {
            return new AudioParams();
        }</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc">
            <p>You need to<xref keyref="registerAudioFrameObserver"/> register the callback when calling the  method. After you successfully register the audio observer, the SDK triggers this callback, and you can set the audio format in the return value of this callback.</p>
            <note type="attention">
            <p>SDK 会通过你在返回值中设置的 <xref keyref="AudioParams"/> 计算采样间隔触发 <apiname keyref="onRecordAudioFrame"/> 回调。 计算公式为<equation-inline><parmname>Sample</parmname> interval (<parmname>sec</parmname>) = <parmname>samplePerCall</parmname>/(<parmname>sampleRate</parmname> × <parmname>channel</parmname>)</equation-inline>.</p>
            <p>Ensure that the sample interval ≥ 0.01 (s).</p>
            </note> </section>
        <section id="return_values">
            <title>Returns</title>
            <p>SDK 采集的音频数据，详见 <xref keyref="AudioParams"/>。</p>
        </section>
    </refbody>
</reference>

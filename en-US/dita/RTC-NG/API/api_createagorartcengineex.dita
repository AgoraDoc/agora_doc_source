<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_createagorartcengineex">
    <title><ph keyref="createAgoraRtcEngineEx" /></title>
    <shortdesc id="short"><ph id="shortdesc">Creates an <apiname keyref="IRtcEngineEx" /> object.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="createAgoraRtcEngineEx" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setAudioProfile(int profile, int scenario);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setAudioProfile:(AgoraAudioProfile)profile scenario:(AgoraAudioScenario)scenario;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int setAudioProfile(AUDIO_PROFILE_TYPE profile, AUDIO_SCENARIO_TYPE scenario) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setAudioProfile(
    profile: AudioProfileType,
    scenario?: AudioScenarioType
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int SetAudioProfile(AUDIO_PROFILE_TYPE profile, AUDIO_SCENARIO_TYPE scenario);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setAudioProfile(
    profile: AudioProfileType,
    scenario?: AudioScenarioType
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setAudioProfile(
    {required AudioProfileType profile,
    AudioScenarioType scenario = AudioScenarioType.audioScenarioDefault});</codeblock>
            <codeblock props="unreal" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <p>Currentluy, the Agora RTC v4.x SDK supports creating only one <apiname keyref="IRtcEngineEx" /> object for each app.</p>
        </section>
        <section id="return_values">
            <title>Returns</title>
            <p props="electron unity rn flutter">An <apiname keyref="IRtcEngineEx" /> object.</p>
        </section>
    </refbody>
</reference>
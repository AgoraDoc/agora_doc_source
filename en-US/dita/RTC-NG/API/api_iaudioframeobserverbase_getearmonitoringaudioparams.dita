<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_iaudioframeobserverbase_getearmonitoringaudioparams">
    <title><ph keyref="getEarMonitoringAudioParams"/></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the audio format for the <xref keyref="onEarMonitoringAudioFrame"/> callback.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getEarMonitoringAudioParams"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract AudioParams getEarMonitoringAudioParams();</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">
- (AgoraAudioParams* _Nonnull)getEarMonitoringAudioParams NS_SWIFT_NAME(getEarMonitoringAudioParams());</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual AudioParams getEarMonitoringAudioParams() = 0;</codeblock>
            <codeblock props="cs" outputclass="language-csharp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since" props="native">
            <dlentry>
                <dt>Since</dt>
                <dd>v4.0.1</dd>
            </dlentry>
            </dl>
            <p>You need to register the callback when calling the <xref keyref="registerAudioFrameObserver"/> method. After you successfully register the audio observer, the SDK triggers this callback, and you can set the audio format in the return value of this callback.</p>
            <note type="attention">
            <p>The SDK will trigger the callback with the calculated sampling interval you set in the return value. 计算公式为<xref keyref="AudioParams"/><apiname keyref="onEarMonitoringAudioFrame"/><equation-inline><parmname>Sample</parmname> interval (<parmname>sec</parmname>) = <parmname>samplePerCall</parmname>/(<parmname>sampleRate</parmname> × <parmname>channel</parmname>)</equation-inline>.</p>
            <p>Ensure that the sample interval ≥ 0.01 (s).</p>
            </note>
        </section>
        <section id="return_values">
            <title>Returns</title>
            <p>耳返的音频数据，详见 <xref keyref="AudioParams"/>。</p>
        </section>
    </refbody>
</reference>

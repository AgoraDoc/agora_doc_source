<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediarecorder_startrecording">
    <title><ph keyref="startRecording"/></title>
    <shortdesc id="short"><ph id="shortdesc">Starts recording the local audio and video.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="startRecording"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public int startRecording(MediaRecorderConfiguration config)</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)startRecording:(AgoraMediaRecorderConfiguration* _Nonnull)config;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int startRecording(const media::MediaRecorderConfiguration&amp; config) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract startRecording(
    connection: RtcConnection,
    config: MediaRecorderConfiguration
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int StartRecording(MediaRecorderConfiguration config);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract startRecording(
    connection: RtcConnection,
    config: MediaRecorderConfiguration
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> startRecording(
      {required RtcConnection connection,
      required MediaRecorderConfiguration config});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>该方法用于开启音视频流录制。 声网 SDK 支持同时录制本地及远端用户的音视频流。</p>
            <p>在开始录制前请确保：

            
            <ul>
            <li>The recording object is created through <xref keyref="createMediaRecorder"/>.</li>
            <li>已调用 <xref keyref="setMediaRecorderObserver"/> 注册录制对象观测器来监听录制的相关回调。</li>
            <li>Joins a channel.</li>
            </ul></p>
            <p>该方法支持录制如下数据：

            
            <ul>
            <li>麦克风采集的、AAC 编码格式的音频。</li>
            <li>摄像头采集的、H.264 或 H.265 编码格式的视频。</li>
            </ul></p>
            <p>Once the recording is started, if the video resolution is changed, the SDK stops the recording; if the sampling rate and audio channel changes, the SDK continues recording and generates audio files respectively.</p>
            <p>The SDK can generate a recording file only when it detects audio and video streams; when there are no audio and video streams to be recorded or the audio and video streams are interrupted for more than five seconds, the SDK stops the recording and triggers the <codeph><apiname keyref="onRecorderStateChanged"/>(<apiname keyref="RECORDER_STATE_ERROR"/>, <apiname keyref="RECORDER_ERROR_NO_STREAM"/>)</codeph> callback.</p>
            
            <note type="attention">
            <ul>
            <li>如果你需要录制的是本地的音视频流，请在开始录制前确保本地用户的角色设为主播。</li>
            <li>如果你需要录制的是远端用户的音视频流，请在开始录制前确保已经订阅了该用户的音视频流。</li>
            </ul></note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>config</pt>
                <pd>The recording configuration. See <xref keyref="MediaRecorderConfiguration"/>.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native unity rn electron">0: Success.</li>
            <li>&lt; 0: Failure.<ul>
                <li>-2: The parameter is invalid. Ensure the following:<ul>
                    <li>The specified path of the recording file exists and is writable.</li>
                    <li>The specified format of the recording file is supported.</li>
                    <li>The maximum recording duration is correctly set.</li>
                    </ul></li>
                <li>-4: <xref keyref="IRtcEngine"/> does not support the request. The recording is ongoing or the recording stops because an error occurs.</li>
                <li>-7: The method is called before <xref keyref="IRtcEngine"/> is initialized. Ensure the <xref keyref="IMediaRecorder"/> object is created before calling this method.</li>
                </ul></li>
            </ul> </section>
    </refbody>
</reference>

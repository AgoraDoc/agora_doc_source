<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_preloadchannel">
    <title><ph keyref="preloadChannel"/></title>
    <shortdesc id="short"><ph id="shortdesc">使用 <parmname>token</parmname>、<parmname props="apple cpp framework">channelId</parmname><parmname props="android">channelName</parmname>、<parmname props="apple cpp framework">uid</parmname><parmname props="android">optionalUid</parmname> 预加载频道。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="preloadChannel"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int preloadChannel(String token, String channelName, int optionalUid);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)preloadChannelByToken:(NSString * _Nullable)token
                   channelId:(NSString * _Nonnull)channelId
                         uid:(NSUInteger)uid NS_SWIFT_NAME(preloadChannel(byToken:channelId:uid:));</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">int IRtcEngine::preloadChannel(const char* token, const char* channelId, uid_t uid);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract preloadChannel(
    token: string,
    channelId: string,
    uid: number
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int PreloadChannel(string token, string channelId, uint uid);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract preloadChannel(
    token: string,
    channelId: string,
    uid: number
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> preloadChannel(
      {required String token, required String channelId, required int uid});</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.2.2</dd>
            </dlentry>
            </dl>
            <p id="desc1">调用该方法可以减少观众频繁切换频道时加入频道的时间，从而缩短观众听到主播首帧音频以及看到首帧画面的耗时，提升观众端的视频体验。 由于 SDK 预加载频道需要一定的时间，因此声网推荐你在确认频道信息和用户信息后、加入频道前，尽早调用该方法。</p>
        <note><ul><li id="note1">调用该方法时，请确保用户角色设为观众、音频应用场景设为非合唱场景（<apiname keyref="AUDIO_SCENARIO_CHORUS"/>），否则预加载不生效。</li>
        <li>请确保预加载频道时传入的频道名、用户 ID、Token 和后续加入频道时传入的值相同，否则预加载不生效。</li>
        <li id="note2">目前一个 <xref keyref="IRtcEngine"/> 实例最多支持预加载 20 个频道，如超出限制，仅最新预加载的 20 频道个生效。</li>
       <li id="note3">预加载不生效不会影响后续正常加入频道，也不会增加加入频道的耗时。</li></ul></note>
       <p id="desc2">如果当前频道已经成功预加载，观众加入、离开频道后如需再次加入该频道，只要预加载时传入的 Token 仍在有效期内，则无需重新预加载。</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry id="token">
                <pt>token</pt>
                <pd>The token generated on your server for authentication. See <xref keyref="guide-token"/>.<p>Token 过期后，根据预加载频道的数量，你可以通过不同方式来传入用于预加载频道的新 Token：
                <ul><li>预加载一个频道时：调用此方法来传入新的 Token。</li>
                <li>预加载多个频道时：<ul><li>如果你使用了通配的 Token，调用 <xref keyref="updatePreloadChannelToken"/> 来更新所有预加载频道的 Token。</li>
                <li>如果你使用了不同的 Token：调用此方法并传入你的用户 ID、对应的频道名和更新后的 Token。</li></ul></li></ul></p>
                </pd>
            </plentry>
            <plentry id="channel">
                <pt props="apple cpp framework">channelId</pt>
                <pt props="android">channelName</pt>
                <pd><p>待预加载的频道名。 This parameter signifies the channel in which users engage in real-time audio and video interaction. Under the premise of the same App ID, users who fill in the same channel ID enter the same channel for audio and video interaction. The string length must be less than 64 bytes. Supported characters:<ul>
                    <li>All lowercase English letters: a to z.</li>
                    <li>All uppercase English letters: A to Z.</li>
                    <li>All numeric characters: 0 to 9.</li>
                    <li>Space</li>
                    <li>"!", "#", "$", "%", "&amp;", "(", ")", "+", "-", ":", ";", "&lt;", "= ", ".", ">", "?", "@", "[", "]", "^", "_", "{", "}", "|", "~", ","</li>
                    </ul></p></pd>
            </plentry>
            <plentry conkeyref="joinChannel1/uid">
                <pt></pt>
                <pd></pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; and you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native unreal bp unity rn electron cs">0: Success.</li>
            <li>&lt; 0: Failure.<ul>
                <li>-2: The parameter is invalid. For example, the token is invalid. You need to pass in a valid parameter and join the channel again.</li>
                <li>-7: The <apiname keyref="IRtcEngine" /> object has not been initialized. You need to initialize the <apiname keyref="IRtcEngine" /> object before calling this method.</li>
                <li>-102: The channel name is invalid. You need to pass in a valid parameter and join the channel again.</li>
                </ul></li>
            </ul> </section>
        </refbody>
</reference>

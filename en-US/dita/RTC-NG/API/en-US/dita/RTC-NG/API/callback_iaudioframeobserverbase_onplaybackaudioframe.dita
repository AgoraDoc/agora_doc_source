<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_iaudioframeobserverbase_onplaybackaudioframe">
    <title><ph keyref="onPlaybackAudioFrame"/></title>
    <shortdesc id="short"><ph id="shortdesc">Gets the raw audio frame for playback.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onPlaybackAudioFrame"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract boolean onPlaybackAudioFrame(int type, int samplesPerChannel, int bytesPerSample,
      int channels, int samplesPerSec, ByteBuffer buffer, long renderTimeMs, int avsync_type);
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)onPlaybackAudioFrame:(AgoraAudioFrame* _Nonnull)frame;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual bool onPlaybackAudioFrame(AudioFrame&amp; audioFrame) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onPlaybackAudioFrame?(channelId: string, audioFrame: AudioFrame): boolean;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public virtual bool OnPlaybackAudioFrame(string channelId, AudioFrame audio_frame)
        {
            return true;
        }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onPlaybackAudioFrame?(channelId: string, audioFrame: AudioFrame): boolean;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(String channelId, AudioFrame audioFrame)?
      onPlaybackAudioFrame;</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <note type="note" id="note">
            <ul>
                <li>Before joining the channel, you need to call the<xref keyref="registerAudioFrameObserver"/>  to register audio observer object, that is, register the  callback<apiname keyref="onPlaybackAudioFrame"/>.</li>
                <li>To ensure that the data format of audio frame for playback is as expected, Agora recommends that you choose one of the following two methods to set the audio data format:<ul>
                        <li>If<xref keyref="setPlaybackAudioFrameParameters"/> you call  to set the audio data format, the SDK calculates the sampling interval according to the parameters in this method, and triggers the  callback according to the sampling interval<apiname keyref="onPlaybackAudioFrame"/>.</li>
                        <li>If you set the<xref keyref="getPlaybackAudioParams"/> audio data format in the return value of the  callback, the SDK calculates the sampling interval according to the return value of the callback, and triggers the  callback according to the sampling interval<apiname keyref="onPlaybackAudioFrame"/>.</li>      
                    </ul></li>
                <li props="flutter">由于 Flutter 框架的限制，该回调不支持将处理后的音频数据发送回 SDK。</li>
            </ul>
            </note></section>
        <section id="parameters" conkeyref="onMixedAudioFrame/parameters"/>
        <section id="return_values" conkeyref="onMixedAudioFrame/return_values"/>
    </refbody>
</reference>

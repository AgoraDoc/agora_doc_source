<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setremotevideosubscriptionoptions">
    <title><ph keyref="setRemoteVideoSubscriptionOptions" /></title>
    <shortdesc id="short"><ph id="shortdesc">Options for subscribing remote video streams.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setRemoteVideoSubscriptionOptions" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setRemoteVideoSubscriptionOptions(int uid, VideoSubscriptionOptions options);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setRemoteVideo:(NSUInteger)uid
    subscriptionOptions:(AgoraVideoSubscriptionOptions* _Nonnull)options NS_SWIFT_NAME(setRemoteVideo(_:subscriptionOptions:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int setRemoteVideoSubscriptionOptions(uid_t uid, const VideoSubscriptionOptions &amp;options) = 0;</codeblock>
            <codeblock props="cs" outputclass="language-csharp" />
            <codeblock props="electron" outputclass="language-typescript">abstract setRemoteVideoSubscriptionOptions(
    uid: number,
    options: VideoSubscriptionOptions
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp"> public abstract int SetRemoteVideoSubscriptionOptions(uint uid, VideoSubscriptionOptions options);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setRemoteVideoSubscriptionOptions(
    uid: number,
    options: VideoSubscriptionOptions
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setRemoteVideoSubscriptionOptions(
      {required int uid, required VideoSubscriptionOptions options});</codeblock>
            <codeblock props="unreal" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <p>When a remote user has enabled the dual-stream mode, you can call this method to choose the option for subscribing the video streams sent by the remote user.</p>
            <p>Agora recommends calling this method after receiving the <xref keyref="onUserJoined" /> callback.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry id="uid">
                <pt>uid</pt>
                <pd>The user ID of the remote user.</pd>
            </plentry>
            <plentry id="op">
                <pt>options</pt>
                <pd>The video subscription options. See <xref keyref="VideoSubscriptionOptions" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_startaudiorecording2">
    <title><ph keyref="startAudioRecording2"/></title>
    <shortdesc id="short"><ph id="shortdesc">开始客户端录音并设置录音采样率。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="startAudioRecording2"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java"/>
            <codeblock props="ios mac" outputclass="language-objectivec"/>
            <codeblock props="cpp" outputclass="language-cpp">virtual int startAudioRecording(const char* filePath,
    int sampleRate,
    AUDIO_RECORDING_QUALITY_TYPE quality) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity" outputclass="language-csharp">public abstract int StartAudioRecording(string filePath, int sampleRate, AUDIO_RECORDING_QUALITY_TYPE quality);</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
           <codeblock props="flutter" outputclass="language-dart"/>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>SDK 支持通话过程中在客户端进行录音。 After successfully calling this method, you can record the audio of all the users in the channel and get an audio recording file. Supported formats of the recording file are as follows:<ul>
            <li>.wav: Large file size with high fidelity.</li>
            <li>.aac: Small file size with low fidelity.</li>
            </ul> </p>
            <note type="attention">
            <ul>
            <li>Ensure that the directory you use to save the recording file exists and is writable.</li>
            <li>This method should be called after the  method<apiname keyref="joinChannel2"/>. <xref keyref="leaveChannel2" props="rn electron flutter"/>The recording automatically stops when you<xref keyref="leaveChannel" props="native unity"/> call the   method.</li>
            <li>For better recording effects, set <parmname>quality</parmname> to  or  when sampleRate is 44.1 kHz or 48 kHz<apiname keyref="AUDIO_RECORDING_QUALITY_MEDIUM"/><apiname keyref="AUDIO_RECORDING_QUALITY_HIGH"/>.<parmname></parmname></li>
            </ul> </note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="AudioRecordingConfiguration/filepath">
                <pt/>
                <pd/>
            </plentry>
            <plentry>
                <pt>sampleRate</pt>
                <pd>
                    <p>The sample rate (kHz) of the recording file. Supported values are as follows:<ul>
                    <li>16000</li>
                    <li>(Default) 32000</li>
                    <li>44100</li>
                    <li>48000</li>
                    </ul> </p>
                </pd>
            </plentry>
            <plentry>
                <pt>quality</pt>
                <pd>Recording quality. See <xref keyref="AUDIO_RECORDING_QUALITY_TYPE"/>.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native electron unity rn">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>

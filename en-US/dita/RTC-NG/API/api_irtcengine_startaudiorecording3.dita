<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_startaudiorecording3">
    <title><ph keyref="startAudioRecording3" /></title>
    <shortdesc id="short"><ph id="shortdesc">开始客户端录音并进行录音配置。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="startAudioRecording3" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int startAudioRecording(AudioFileRecordingConfig config);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)startAudioRecordingWithConfig:(AgoraAudioRecordingConfiguration * _Nonnull)config;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int startAudioRecording(const AudioFileRecordingConfig&amp; config) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract startAudioRecording(config: AudioRecordingConfiguration): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int StartAudioRecording(AudioRecordingConfiguration config);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract startAudioRecording(config: AudioRecordingConfiguration): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; startAudioRecording(AudioRecordingConfiguration config);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>SDK 支持通话过程中在客户端进行录音。 After successfully calling this method, you can record the audio of users in the channel and get an audio recording file. Supported formats of the recording file are as follows:<ul>
            <li>WAV: High-fidelity files with typically larger file sizes.  For example, if the sample rate is 32,000 Hz, the file size for 10-minute recording is approximately 73 MB.</li>
            <li>AAC: Low-fidelity files with typically smaller file sizes.  For example, if the sample rate is 32,000 Hz and the recording quality is<ph keyref="AUDIO_RECORDING_QUALITY_MEDIUM" /> , the file size for 10-minute recording is approximately 2 MB.</li>
            </ul></p>
            <p>Once the user leaves the channel, the recording automatically stops.</p>
            <note type="attention">Call this method after joining a channel.</note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>config</pt>
                <pd>Recording configuration. See .<xref keyref="AudioRecordingConfiguration" /></pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native electron unity rn">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>
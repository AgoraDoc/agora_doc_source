<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_queryscreencapturecapability">
    <title><ph keyref="queryScreenCaptureCapability"/></title>
    <shortdesc id="short"><ph id="shortdesc">Queries the highest frame rate supported by the device during screen sharing.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="queryScreenCaptureCapability"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int queryScreenCaptureCapability();</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (AgoraScreenCaptureFrameRateCapability)queryScreenCaptureCapability NS_SWIFT_NAME(queryScreenCaptureCapability());</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">#if defined(__ANDROID__) || (defined(__APPLE__) &amp;&amp; TARGET_OS_IOS)
    virtual int queryScreenCaptureCapability() = 0;
#endif</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract queryScreenCaptureCapability(): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int QueryScreenCaptureCapability();</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract queryScreenCaptureCapability(): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;int> queryScreenCaptureCapability();</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.2.0</dd>
            </dlentry>
            </dl>
            <p/>
        </section>
        <section id="scenario">
            <title>Applicable scenarios</title>
            <p props="cpp">This method is for Android and iOS only.</p>
            <p>If you want to enable high frame rates (such as 60 fps) in a screen sharing scenario, but you're unsure if the device supports it, you can call this method to query the maximum frame rate that the device supports. If the device does not support high frame rate, you can reduce the frame rate of the screen sharing stream appropriately when sharing the screen to ensure that the sharing effect meets your expectation.</p>
        </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; you need to catch the exception and handle it accordingly.</p>
            <ul props="apple"><li>The highest frame rate supported by the device, if the method is called successfully. See <xref keyref="SCREEN_CAPTURE_FRAMERATE_CAPABILITY"/>.</li>
                <li>If the call fails, returns <xref keyref="NULL"/>.</li></ul>
                <ul props="cpp android">
                    <li><ph>The highest frame rate supported by the device, if the method is called successfully. </ph><ph props="cpp">See <xref keyref="SCREEN_CAPTURE_FRAMERATE_CAPABILITY"/>.</ph><ul  props="android">
                    <li>0: The device supports a frame rate of up to 15 fps.</li>
                    <li>1: The device supports a frame rate of up to 30 fps.</li>
                    <li>2: The device supports a frame rate of up to 60 fps.</li></ul></li>
                    <li>&lt; 0: Failure.</li></ul>
        </section>
    </refbody>
</reference>

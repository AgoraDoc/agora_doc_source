<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_iaudioframeobserverbase_onrecordaudioframe">
    <title><ph keyref="onRecordAudioFrame"/></title>
    <shortdesc id="short"><ph id="shortdesc">Gets the captured audio frame.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onRecordAudioFrame"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract boolean onRecordAudioFrame(int type, int samplesPerChannel, int bytesPerSample,
      int channels, int samplesPerSec, ByteBuffer buffer, long renderTimeMs, int avsync_type);
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)onRecordAudioFrame:(AgoraAudioFrame* _Nonnull)frame;
</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual bool onRecordAudioFrame(AudioFrame&amp; audioFrame) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onRecordAudioFrame?(channelId: string, audioFrame: AudioFrame): boolean;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public virtual bool OnRecordAudioFrame(string channelId, AudioFrame audioFrame)
        {
            return true;
        }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onRecordAudioFrame?(channelId: string, audioFrame: AudioFrame): boolean;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(String channelId, AudioFrame audioFrame)?
      onRecordAudioFrame</codeblock> </p>
        </section>
        <section id="detailed_desc" props="native unity">
            <note type="note">If you want to set the format of the captured audio frame, Agora recommends that you call the  method to<xref keyref="registerAudioFrameObserver"/> set the format of the audio frame after calling<xref keyref="getRecordAudioParams"/> the  method to register an audio frame observer. The SDK calculates the<apiname keyref="getRecordAudioParams"/> sampling interval according to the AudioParams set in the<parmname></parmname>  callback return value, and triggers the  callback according to the sampling interval<apiname keyref="onRecordAudioFrame"/>.</note> </section>
        <section id="parameters" conkeyref="onMixedAudioFrame/parameters"/>
        <section id="return_values" conkeyref="onMixedAudioFrame/return_values"/>
    </refbody>
</reference>

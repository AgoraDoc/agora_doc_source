<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_startscreencapture2">
    <title><ph keyref="startScreenCapture2" /></title>
    <shortdesc id="short"><ph id="shortdesc">开始屏幕采集。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="startScreenCapture2" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec">
- (int)startScreenCapture:(AgoraVideoSourceType)sourceType config:(AgoraScreenCaptureConfiguration * _Nullable)config NS_SWIFT_NAME(startScreenCapture(_:config:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int startScreenCapture(VIDEO_SOURCE_TYPE sourceType, const ScreenCaptureConfiguration&amp; config) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract startSecondaryScreenCapture(
    config: ScreenCaptureConfiguration
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int StartSecondaryScreenCapture(ScreenCaptureConfiguration config);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract startSecondaryScreenCapture(
    config: ScreenCaptureConfiguration
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; startSecondaryScreenCapture(ScreenCaptureConfiguration config);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.2.0</dd>
            </dlentry>
            </dl>
            <p>                <ph props="mac electron">该方法和 <xref keyref="startScreenCaptureByDisplayId"/> 和 <xref keyref="startScreenCaptureByWindowId"/> 均可以开启屏幕采集，区别如下：</ph>
<ph props="cpp unity flutter">该方法和 <xref keyref="startScreenCapture"/>、<xref keyref="startScreenCaptureByDisplayId"/> 和 <xref keyref="startScreenCaptureByWindowId"/> 均可以开启屏幕采集，区别如下：</ph>
                <ul>
                    <li props="cpp unity flutter"><apiname keyref="startScreenCapture"/>仅适用于移动端，该方法仅适用于桌面端。</li>
                    <li><apiname keyref="startScreenCaptureByDisplayId"/>和 <apiname keyref="startScreenCaptureByWindowId"/> 仅支持采集单个屏幕或窗口；调用该方法可以通过 <parmname>sourceType</parmname> 指定多个视频源，以采集多路屏幕共享流，用于本地合图或者多频道发布。</li>
                </ul>
            </p>
            <note type="attention"><ul>
            <li props="cpp unity flutter">This method applies to the macOS and Windows platforms only.</li>
            <li>如果调用该方法开始屏幕采集，声网建议你使用 <xref keyref="stopScreenCapture2"/> 停止采集，不要与 <xref keyref="stopScreenCapture"/> 混用。</li></ul></note>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>sourceType</pt>
                <pd>
                    <p>The type of the video frame, see <xref keyref="VIDEO_SOURCE_TYPE"/>.</p>
                    <note><ul>
                    <li props="cpp flutter unity electron">Windows 平台最多支持 4 路屏幕采集的视频流。</li>
                    <li props="cpp mac flutter unity electron">macOS 平台最多支持 1 路屏幕采集的视频流，当前仅支持将该参数设置为 <codeph><apiname keyref="VIDEO_SOURCE_SCREEN"/>(2)</codeph>。</li></ul></note>
                </pd>
            </plentry>
            <plentry>
                <pt>config</pt>
                <pd>The configuration of the captured screen. See .<xref keyref="ScreenCaptureConfiguration" /></pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; you need to catch the exception and handle it accordingly.</p>
        </section>
        <section>
            <ul>
            <li props="native electron unity rn">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>

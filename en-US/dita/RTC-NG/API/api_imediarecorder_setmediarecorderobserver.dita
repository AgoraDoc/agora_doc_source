<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediarecorder_setmediarecorderobserver">
    <title><ph keyref="setMediaRecorderObserver" /></title>
    <shortdesc id="short"><ph id="shortdesc">Registers one <xref keyref="IMediaRecorderObserver" /> object.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setMediaRecorderObserver" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public int setMediaRecorderObserver(IMediaRecorderCallback callback)</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setMediaRecorderDelegate:(id&lt;AgoraMediaRecorderDelegate> _Nullable)delegate;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int setMediaRecorderObserver(media::IMediaRecorderObserver* callback) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setMediaRecorderObserver(
    connection: RtcConnection,
    callback: IMediaRecorderObserver
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int SetMediaRecorderObserver(IMediaRecorderObserver callback);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setMediaRecorderObserver(
    connection: RtcConnection,
    callback: IMediaRecorderObserver
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setMediaRecorderObserver(
      {required RtcConnection connection,
      required MediaRecorderObserver callback});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>该方法用于设置音视频录制的回调，以便在录制过程中向 app 通知音视频流的录制状态和信息。</p>
            <p>调用该方法前请确保：<ul>
                <li>已初始化 <xref keyref="IRtcEngine" /> 对象。</li>
                <li>已创建音视频录制对象。</li>
                </ul></p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="cpp android framework">callback</pt>
                <pt props="apple">delegate</pt>
                <pd>The callbacks for recording local audio and video streams. See <xref keyref="IMediaRecorderObserver" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native rn electron unity">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>

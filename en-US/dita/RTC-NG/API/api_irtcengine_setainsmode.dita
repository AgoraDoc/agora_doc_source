<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setainsmode">
    <title><ph keyref="setAINSMode"/></title>
    <shortdesc id="short"><ph id="shortdesc">Sets whether to enable the AI noise reduction function and set the noise reduction mode.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setAINSMode"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setAINSMode(boolean enabled, int mode);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setAINSMode:(BOOL)enabled mode:(AUDIO_AINS_MODE)mode NS_SWIFT_NAME(setAINSMode(_:mode:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int setAINSMode(bool enabled,  AUDIO_AINS_MODE mode) = 0;</codeblock>
            <codeblock props="cs" outputclass="language-csharp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity" outputclass="language-csharp">public abstract int SetAINSMode(bool enabled, AUDIO_AINS_MODE mode);</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.2.0</dd>
            </dlentry>
            </dl>
            <p>You can call this method to enable AI noise reduction function. Once enabled, the SDK automatically detects and reduce stationary and non-stationary noises from your audio on the premise of ensuring the quality of human voice. Stationary noises refers to noise signal with constant average statistical properties and negligibly small fluctuations of level within the period of observation. For example, common sources of stationary noises are:<ul><li>Television;</li>
            <li>Air conditioner;</li>
            <li>Machinery, etc.</li></ul>Non-stationary noises refers to noise signal with huge fluctuations of level within the period of observation, For example, common source of non-stationary noises are:<ul><li>Thunder;</li>
            <li>Explosion;</li>
            <li>Cracking, etc.</li></ul></p>
        </section>
        <section id="scenario">
            <title>Applicable scenarios</title>
            <p>In scenarios such as co-hosting, online education, video meeting, this function can detects and reduce noises from the background</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>enabled</pt>
                <pd>是否开启 AI 降噪功能：

                    <ul>
                    <li>Enables<ph> the AI Denoiser extension.</ph><codeph><ph keyref="true"/></codeph></li>
                    <li><codeph><ph keyref="false"/></codeph>：<ph>（默认）关闭 AI 降噪功能。</ph> </li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>mode</pt>
                <pd>
                    <p props="cpp apple framework">降噪模式，详见 <xref keyref="AUDIO_AINS_MODE"/>。</p>
                    <p props="android">降噪模式：
                    <ul>
                    <li>0：（默认）弱降噪模式。 如果你希望实现对噪声抑制和延时都较为均衡的降噪效果，可选择该模式。</li>
                    <li>1：强降噪模式；适用于对噪声抑制性能要求较高的场景，如户外直播。 该模式可以更大程度地减少噪声，但同时可能会造成语音损伤。</li>
                    <li>2：低延时强降噪模式。 该模式的降噪延时比弱降噪和强降噪模式大约低一半，适用于对降噪及低延时要求较高的场景，如实时合唱。</li>
                    </ul> </p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native unity rn electron">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul></section>
    </refbody>
</reference>

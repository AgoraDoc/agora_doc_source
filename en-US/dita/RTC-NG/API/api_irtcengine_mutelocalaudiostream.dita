<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_mutelocalaudiostream">
    <title><ph keyref="muteLocalAudioStream"/></title>
    <shortdesc id="short"><ph id="shortdesc">Stops or resumes publishing the local audio stream.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="muteLocalAudioStream"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int muteLocalAudioStream(boolean muted);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)muteLocalAudioStream:(BOOL)mute;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int muteLocalAudioStream(bool mute) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int MuteLocalAudioStream(bool mute);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract muteLocalAudioStream(mute: boolean): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int MuteLocalAudioStream(bool mute);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract muteLocalAudioStream(mute: boolean): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; muteLocalAudioStream(bool mute);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>该方法用于控制是否发布本地采集的音频流。 如果不发布本地采集的音频流，也不会禁用音频采集设备，所以不影响音频的采集状态。</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>Call timing</title>
            <p>加入频道前后均可调用。</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>None.</p>
        </section>
        <section id="related" deliveryTarget="details">
            <title>Related callbacks</title>
            <p>成功调用该方法后，本地会触发 <xref keyref="onAudioPublishStateChanged"/> 回调；远端会触发 <xref keyref="onUserMuteAudio"/> 回调和 <xref keyref="onRemoteAudioStateChanged"/> 回调。</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="android">muted</pt>
                <pt props="ios mac cpp unreal bp unity flutter rn electron cs">mute</pt>
                <pd id="mute">
                    <p>Whether to stop publishing the local audio stream:<ul>
                    <li><codeph><ph keyref="true"/></codeph>: Stops publishing the local audio stream.</li>
                    <li><codeph><ph keyref="false"/></codeph>: (Default) Resumes publishing the local audio stream.</li>
                    </ul></p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: Success.</li>
            <li> &lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>

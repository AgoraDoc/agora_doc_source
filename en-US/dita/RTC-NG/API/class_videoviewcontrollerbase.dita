<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_videoviewcontrollerbase">
    <title><ph keyref="VideoViewControllerBase" /></title>
    <shortdesc id="short"><ph id="shortdesc">A <xref keyref="AgoraVideoView" /> controller for rendering local and remote video.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setExtensionProperty(
      String provider, String extension, String key, String value);
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setExtensionPropertyWithVendor:(NSString * __nonnull)provider extension:(NSString * __nonnull)extension key:(NSString * __nonnull)key value:(NSString * __nonnull)value;
</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int setExtensionProperty(
      const char* provider, const char* extension,
      const char* key, const char* value, agora::media::MEDIA_SOURCE_TYPE type = agora::media::UNKNOWN_MEDIA_SOURCE) = 0;
</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setExtensionProperty(
    provider: string,
    extension: string,
    key: string,
    value: string,
    type?: MediaSourceType
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int SetExtensionProperty(string provider, string extension, string key, string value, MEDIA_SOURCE_TYPE type = MEDIA_SOURCE_TYPE.UNKNOWN_MEDIA_SOURCE);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setExtensionProperty(
    provider: string,
    extension: string,
    key: string,
    value: string,
    type?: MediaSourceType
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setExtensionProperty(
    {required String provider,
    required String extension,
    required String key,
    required String value,
    MediaSourceType type = MediaSourceType.unknownMediaSource});</codeblock>
            <codeblock props="unreal" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <p>On different platforms, the default view corresponding to this class is different:<ul>
            <li>Android: <xref keyref="TextureView-link" />. If you want to use <xref keyref="SurfaceView-link" />, set the <codeph>useAndroidSurfaceView</codeph> property to <codeph>true</codeph>.</li>
            <li>iOS: <xref keyref="UIView-link" />. If you want to use Flutter Texture, set the <codeph>useFlutterTexture</codeph> property to <codeph>true</codeph>.</li>
            <li>macOS and Windows: <xref keyref="FlutterTexture-link" />.</li>
            </ul> </p>
        </section>
<section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
            <parml>
            <plentry id="rtcengine">
                <pt>rtcEngine</pt>
                <pd><xref keyref="IRtcEngine" />.</pd>
            </plentry>
            <plentry id="canvas">
                <pt>canvas</pt>
                <pd>The local video view and settings. See <xref keyref="VideoCanvas" />.</pd>
            </plentry>
            <plentry id="connection">
                <pt>connection</pt>
                <pd>The connection information. See <xref keyref="RtcConnection" />.</pd>
            </plentry>
            <plentry id="fluttertexture">
                <pt>useFlutterTexture</pt>
                <pd>Whether to use <codeph>FlutterTexture</codeph> to render video:<ul>
                    <li><codeph><ph keyref="true" /></codeph>: Use <codeph>FlutterTexture</codeph> to render video.</li>
                    <li><codeph><ph keyref="false" /></codeph>: Do not use <codeph>FlutterTexture</codeph> to render video.</li>
                    </ul>
                    <note><codeph>FlutterTexture</codeph> applies to iOS, macOS and Windows platforms.</note></pd>
            </plentry>
            <plentry id="androidsurfaceview">
                <pt>useAndroidSurfaceView</pt>
                <pd>Whether to use Android <codeph>SurfaceView</codeph> to render video:<ul>
                    <li><codeph><ph keyref="true" /></codeph>: Use Android <codeph>SurfaceView</codeph> to render video.</li>
                    <li><codeph><ph keyref="false" /></codeph>: Do not use Android <codeph>SurfaceView</codeph> to render video.</li>
                    </ul>
                    <note>Android <codeph>SurfaceView</codeph> applies to Android platform only.</note></pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="release_notes">
    <title/>
    <topic id="level2">
        <title>v4.2.3</title>
        <body>
            <p>v4.2.2 was released on September xx, 2023.</p>
        </body>
        <topic id="level3">
            <title/>
            <topic id="newfeature">
                <title>New features</title>
                <body>
                    <ol>
                        <li><ph><b><b>Video screenshot and upload</b></b></ph><p><ph>为方便接入声网云市场提供的第三方视频审核服务，该版本有以下改动：</ph>
                                <ul>
                                    <li props="cpp apple unity rn flutter"><codeph><apiname keyref="CONTENT_INSPECT_TYPE"/></codeph>中新增 <codeph><apiname keyref="CONTENT_INSPECT_IMAGE_MODERATION"/></codeph> 枚举值，代表使用声网云市场视频审核插件对视频截图并上传。</li>
                                    <li props="android"><codeph><apiname keyref="ContentInspectModule"/></codeph>中的 <codeph>type</codeph> 新增 <codeph><apiname keyref="CONTENT_INSPECT_IMAGE_MODERATION"/></codeph> 枚举值，代表使用声网云市场视频审核插件对视频截图并上传。</li>
                                    <li><codeph><apiname keyref="ContentInspectConfig"/></codeph>中新增的 <codeph>serverConfig</codeph> 可选参数用于云市场视频截图上传相关服务端配置，配置后可同时接入多个云市场审核插件并实现灵活控制插件开关等功能，详情请<ph keyref="ticket-link"/>。</li>
                                </ul>                                <ph>此外，该版本还新增了 <codeph><apiname keyref="enableContentInspectEx"/></codeph> 方法，支持同时对多条视频流截图并上传。</ph>
                            </p>
                        </li>
                        <li props="cpp"><ph><b>ID3D11Texture2D Rendering </b></ph><p>As of this release, the SDK supports video formats of type ID3D11Texture2D, improving the rendering effect of video frames in game scenarios. You can set <parmname>format</parmname> to <codeph>VIDEO_TEXTURE_ID3D11TEXTURE2D</codeph> when pushing external raw video frames to the SDK by calling . By setting the *<parmname>d3d11_texture_2d</parmname> and texture_slice_index properties, you can determine the ID3D11Texture2D<parmname> texture</parmname> object to use.<codeph><apiname keyref="pushVideoFrame"/></codeph></p>
                        </li>
                        <li props="cpp"><ph><b>Local video status error code update</b></ph><p>In order to help users understand the exact reasons for local video errors in screen sharing scenarios, the following sets of enumerations have been added to the <codeph><apiname keyref="onLocalVideoStateChanged"/></codeph> callback:<ul>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_PAUSED"/></codeph>(23): Screen capture has been paused. Common scenarios for reporting this error code: The current screen may have been switched to a secure desktop, such as a UAC dialog box or Winlogon desktop.</li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_RESUMED"/></codeph>(24): Screen capture has resumed from the paused state.</li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_HIDDEN"/></codeph>(25): The window being captured on the current screen is in a hidden state and is not visible on the current screen.</li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_RECOVER_FROM_HIDDEN"/></codeph>(26): The window for screen capture has been restored from the hidden state.</li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_RECOVER_FROM_MINIMIZED"/></codeph>(27): The window for screen capture has been restored from the minimized state.</li>
                            </ul></p>
                        </li>
                    </ol>
                </body>
            </topic>
            <topic id="improvement">
                <title>Improvements</title>
                <body>
                    <ol>
                        <li><ph><b>优化虚拟背景内存占用</b></ph>
                            <p>该版本升级了虚拟背景算法，降低了虚拟背景功能的内存占用。 相比之前的版本，在低端机上使用虚拟背景功能时 App 运行占用的内存降低了约 4%~10%（具体数值取决于设备型号和平台）。</p>
                        </li>
                        <li props="cpp android"><ph><b>Screen sharing scenario optimization</b></ph><p props="cpp">This release optimizes the performance and encoding efficiency in ultra-high-definition (4K, 60 fps) game sharing scenarios, effectively reducing the system resource usage during screen sharing.</p>
                            <p props="android">This version optimizes the video encoding configuration in screen sharing scenarios. When users customize the <codeph>width</codeph> and <codeph>height</codeph> properties of the video, the SDK rounds down the actual encoding resolution while maintaining the aspect ratio of the video and the screen, ensuring that the final encoding resolution does not exceed the user-defined encoding resolution, thereby improving the accuracy of billing for screen sharing streams.</p>
                        </li>
                    </ol>
                    <p><b>Other Improvements</b></p>
                    <p>This release includes the following additional improvements:<ul>
                        <li props="android">Optimizes the management method of Texture Buffer for SDK capture and custom video capture scenarios, effectively eliminating frame dropping and crash risks.</li>
                         <li>当调用 <codeph><apiname keyref="setPlaybackSpeed"/></codeph> 设置音频文件的播放进度时，传入非法参数后会返回错误码 -2，表示方法中设置了无效的参数，需要重新设置参数。</li>
                         <li>优化了 Token 解析时的逻辑，避免传入非法 Token 后 App 发生崩溃。</li>
                        </ul></p>
                </body>
            </topic>
            <topic id="bugfix">
                <title>Issues fixed</title>
                <body>
                    <p>This release fixed the following issues:</p>
                    <ul>
                        <li props="cpp">Occasional crashes and dropped frames occured in screen sharing scenarios.</li>
                        <li props="android">When using the H.265 encoding mode, when a Web client joined the interactivity, it caused a redundant <codeph><apiname keyref="onUserEnableLocalVideo"/></codeph> callback on the native side: when the host called <codeph><apiname keyref="enableLocalVideo"/> (true)</codeph>, the receiving end first received a <codeph><apiname keyref="onUserEnableLocalVideo"/></codeph> callback with (<codeph>enabled</codeph> as <codeph>false</codeph>) before receiving a <codeph><apiname keyref="onUserEnableLocalVideo"/></codeph> callback with (<codeph>enabled</codeph> as <codeph>true</codeph>).</li>
                        <li props="mac unity flutter"><p><ph>加入频道偶现的崩溃。 </ph><ph>(macOS)</ph></p></li>
                        <li>本地系统时间不正确时，偶现加入频道失败。</li>
                        <li>调用 playEffect 使用相同的 soundId 播放两个不同的音效文件，偶现第一个音效文件播放完毕后会重复播放。</li>
                        <li props="android unity flutter rn"><p><ph>主播调用 <codeph><apiname keyref="startAudioMixing2"/></codeph> 播放音乐文件时，偶现主播本地无法听见音乐，远端用户可以正常听见。 </ph><ph props="unity flutter rn">(Android)</ph></p></li>
                        <li props="android ios unity flutter rn"><p><ph>合唱场景下，调用 <codeph><apiname keyref="preload"/></codeph> 加载音乐，偶现加载失败。 </ph>(Android, iOS)<ph props="unity flutter"></ph></p></li>
                        <li props="android unity flutter rn"><p><ph>在特定机型上开启 AI 降噪偶现崩溃。 </ph><ph props="unity flutter rn">(Android)</ph></p></li>
                        <li props="android ios unity flutter rn"><p><ph>当本地系统时间不准确时，歌曲榜单加载失败。 </ph><ph props="unity flutter">(Android, iOS)</ph></p></li>
                        <li>调用一次 <codeph><apiname keyref="takeSnapshotEx"/></codeph> 获取视频截图会收到多次 <codeph><apiname keyref="onSnapshotTaken"/></codeph> 视频截图结果回调。</li>
                        <li props="android unity flutter rn"><p><ph>在仅调用 <codeph><apiname keyref="joinChannelEx"/></codeph> 加入的频道中，调用 <codeph><apiname keyref="setEnableSpeakerphone"/></codeph> 无法将音频路由从扬声器切换至听筒。 </ph><ph props="unity flutter rn">(Android)</ph></p></li>
                    </ul>
                </body>
            </topic>
            <topic id="apichange">
                <title>API changes</title>
                <body>
                    <p><b>Added</b><ul>
                        <li props="cpp"><codeph><apiname keyref="onLocalVideoStateChanged"/></codeph>中新增如下枚举：
                            <ul>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_PAUSED"/></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_RESUMED"/></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_HIDDEN"/></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_RECOVER_FROM_HIDDEN"/></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_RECOVER_FROM_MINIMIZED"/></codeph></li>
                            </ul></li>
                        <li  props="cpp"><codeph><apiname keyref="ExternalVideoFrame"/></codeph>中新增 <codeph>d3d11_texture_2d</codeph> 和 <codeph>texture_slice_index</codeph> 成员</li>
                        <li  props="cpp"><codeph><apiname keyref="VIDEO_PIXEL_FORMAT"/></codeph>中新增 <codeph><apiname keyref="VIDEO_TEXTURE_ID3D11TEXTURE2D"/></codeph> 枚举</li>
                        <li><codeph><apiname keyref="enableContentInspectEx"/></codeph></li>
                        <li props="cpp apple rn unity flutter">Added<codeph><apiname keyref="CONTENT_INSPECT_TYPE"/></codeph><codeph><apiname keyref="CONTENT_INSPECT_IMAGE_MODERATION"/></codeph></li>
                        <li props="android"><codeph><apiname keyref="ContentInspectModule"/></codeph>中的 <codeph>type</codeph> 新增 <codeph><apiname keyref="CONTENT_INSPECT_IMAGE_MODERATION"/></codeph> </li>
                        <li><codeph><apiname keyref="ContentInspectConfig"/></codeph>中新增 <codeph>serverConfig</codeph> 可选参数</li>
                        <li><codeph><apiname keyref="isFeatureAvailableOnDevice"/></codeph></li>
                        <li><codeph><apiname keyref="FeatureType"/></codeph></li>
                        </ul></p>
                </body>
            </topic>
        </topic>
    </topic>
</topic>

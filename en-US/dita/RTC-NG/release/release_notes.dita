<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="release_notes">
    <title>v4.3.0</title>
    <body>
        <p>v4.3.0 was released on xx xx, 2024.</p>
    </body>
    <topic id="level2">
        <title/>
        <topic id="compatibility">
            <title>Compatibility changes</title>
            <body>
                <p>This version has optimized the implementation of some functions, involving renaming or deletion of some APIs. To ensure the normal operation of the project, you need to update the code in the App after upgrading to this version.</p>
                <ol>
                    <li><ph><b>Renaming parameters in callbacks</b></ph><p>In order to make the parameters in some callbacks and the naming of enumerations in enumeration classes easier to understand, the following modifications have been made in this version. Please modify the parameter settings in the callbacks after upgrading to this version.<table frame="all" rowsep="1" colsep="1">
                        <tgroup cols="3">
                            <colspec colname="c1" colnum="1" colwidth="1*"/>
                            <colspec colname="c2" colnum="2" colwidth="1*"/>
                            <colspec colname="c3" colnum="3" colwidth="1*"/>
                            <thead>
                                <row>
                                    <entry>callbacks</entry>
                                    <entry>Original parameter name</entry>
                                    <entry>Existing parameter names</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><xref keyref="onLocalAudioStateChanged"/></entry>
                                    <entry><parmname>error</parmname></entry>
                                    <entry><parmname>reason</parmname></entry>
                                </row>
                                <row>
                                    <entry><xref keyref="onLocalAudioStateChanged"/></entry>
                                    <entry><parmname>error</parmname></entry>
                                    <entry><parmname>reason</parmname></entry>
                                </row>
                                <row>
                                    <entry><xref keyref="onDirectCdnStreamingStateChanged"/></entry>
                                    <entry><parmname>error</parmname></entry>
                                    <entry><parmname>reason</parmname></entry>
                                </row>
                                <row>
                                    <entry><xref keyref="onMusicChartsResult"/></entry>
                                    <entry><parmname>errorCode</parmname></entry>
                                    <entry><parmname>reason</parmname></entry>
                                </row>
                                <row>
                                    <entry><xref keyref="onPreLoadEvent_IMusicContentCenterEventHandler"/></entry>
                                    <entry><ul><li><parmname>status</parmname></li><li><parmname>state</parmname></li></ul></entry>
                                    <entry><ul><li><parmname>errorCode</parmname></li><li><parmname>reason</parmname></li></ul></entry>
                                </row>
                                <row>
                                    <entry><xref keyref="onMusicCollectionResult"/></entry>
                                    <entry><parmname>errorCode</parmname></entry>
                                    <entry><parmname>reason</parmname></entry>
                                </row>
                                <row>
                                    <entry><xref keyref="onLyricResult"/></entry>
                                    <entry><parmname>errorCode</parmname></entry>
                                    <entry><parmname>reason</parmname></entry>
                                </row>
                                <row>
                                    <entry><xref keyref="onSongSimpleInfoResult"/></entry>
                                    <entry><parmname>errorCode</parmname></entry>
                                    <entry><parmname>reason</parmname></entry>
                                </row>
                                <row props="apple android">
                                    <entry><xref keyref="onPlayerSourceStateChanged"/></entry>
                                    <entry><parmname>error</parmname></entry>
                                    <entry><parmname>reason</parmname></entry>
                                </row>
                                <row props="cpp">
                                    <entry><xref keyref="onPlayerSourceStateChanged"/></entry>
                                    <entry><parmname>ec</parmname></entry>
                                    <entry><parmname>reason</parmname></entry>
                                </row>
                                <row>
                                    <entry><xref keyref="onRtmpStreamingStateChanged"/></entry>
                                    <entry><parmname>errCode</parmname></entry>
                                    <entry><parmname>reason</parmname></entry>
                                </row>
                            </tbody>
                        </tgroup>
                        </table><table frame="all" rowsep="1" colsep="1">
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1*"/>
                            <colspec colname="c2" colnum="2" colwidth="1*"/>
                            <thead>
                                <row>
                                    <entry>Existing enumeration class</entry>
                                    <entry>Existing enumeration class</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><apiname keyref="LOCAL_AUDIO_STREAM_REASON"/></entry>
                                    <entry><apiname keyref="LOCAL_AUDIO_STREAM_REASON"/></entry>
                                </row>
                                <row>
                                    <entry><apiname keyref="LOCAL_VIDEO_STREAM_ERROR"/></entry>
                                    <entry><apiname keyref="LOCAL_VIDEO_STREAM_ERROR"/></entry>
                                </row>
                                <row>
                                    <entry><apiname keyref="DIRECT_CDN_STREAMING_ERROR"/></entry>
                                    <entry><apiname keyref="DIRECT_CDN_STREAMING_REASON"/></entry>
                                </row>
                                <row>
                                    <entry><apiname keyref="MEDIA_PLAYER_ERROR"/></entry>
                                    <entry><apiname keyref="MEDIA_PLAYER_REASON"/></entry>
                                </row>
                                <row>
                                    <entry><apiname keyref="RTMP_STREAM_PUBLISH_ERROR"/></entry>
                                    <entry><apiname keyref="RTMP_STREAM_PUBLISH_REASON"/></entry>
                                </row>
                                <row>
                                    <entry><apiname keyref="MusicContentCenterStatusErrCode"/></entry>
                                    <entry><apiname keyref="MusicContentCenterStateReason"/></entry>
                                </row>
                            </tbody>
                        </tgroup>
                        </table>
                        <note>For specific renaming of enumerations, please refer to .<xref href="#apichange"></xref></note></p>
                    </li>
                </ol>
                <ol>
                    <li><ph><b>Channel media relay</b></ph><p>To improve interface usability, this release removes some methods and callbacks for channel meda relay. Use the alternative options listed in the table below:<table frame="all" rowsep="1" colsep="1" id="table_jvq_ltp_wzb">
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1*"/>
                            <colspec colname="c2" colnum="2" colwidth="1*"/>
                            <thead>
                                <row>
                                    <entry>Deleted methods and callbacks</entry>
                                    <entry>Alternative methods and callbacks</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>
                                        <ul id="ul_nwr_4tp_wzb">
                                            <li><codeph><apiname keyref="startChannelMediaRelay"/></codeph></li>
                                            <li><codeph><apiname keyref="updateChannelMediaRelay"/></codeph></li>
                                        </ul>
                                    </entry>
                                    <entry><codeph><apiname keyref="startOrUpdateChannelMediaRelay"/></codeph></entry>
                                </row>
                                <row>
                                    <entry>
                                        <ul id="ul_kmq_ptp_wzb">
                                            <li><codeph><apiname keyref="startChannelMediaRelayEx"/></codeph></li>
                                            <li><codeph><apiname keyref="updateChannelMediaRelayEx"/></codeph></li>
                                        </ul>
                                    </entry>
                                    <entry><codeph><apiname keyref="startOrUpdateChannelMediaRelayEx"/></codeph></entry>
                                </row>
                                <row>
                                    <entry><codeph><apiname keyref="onChannelMediaRelayEvent"/></codeph></entry>
                                    <entry><codeph><apiname keyref="onChannelMediaRelayStateChanged"/></codeph></entry>
                                </row>
                            </tbody>
                        </tgroup>
                        </table></p>
                    </li>
                    <li props="android ios"><ph><b>Custom video source</b></ph><p props="android">Since this release, <codeph> pushExternalVideoFrameEx</codeph>[1/2] and <codeph>pushExternalVideoFrameEx</codeph>[2/2] are renamed to <codeph>pushExternalVideoFrameById</codeph>[1/2] and <codeph>pushExternalVideoFrameById</codeph>[2/2] respectively, and are migrated from <codeph><apiname keyref="IRtcEngineEx"/></codeph> to <codeph><apiname keyref="IRtcEngine"/></codeph>.</p>
                        <p props="ios">Since this release, <codeph>pushExternalVideoFrame</codeph>[1/2] is migrated from <codeph><apiname keyref="IRtcEngineEx"/></codeph> to <codeph><apiname keyref="IRtcEngine"/></codeph>.</p>
                    </li>
                    <li props="android ios flutter unity rn"><ph><b>Audio route</b></ph><p props="android unity">Starting from this version, (5)ROUTE_BLUETOOTH in 中 has been renamed to indicate audio routing for<codeph> Bluetooth</codeph> devices using the HFP protocol, and (10) has been added to indicate audio routing for Bluetooth devices using the A2DP protocol.<codeph><apiname keyref="AudioRoute"/></codeph><codeph><ph keyref="ROUTE_BLUETOOTH_DEVICE_HFP"/></codeph><codeph><ph keyref="ROUTE_BLUETOOTH_DEVICE_A2DP"/></codeph></p>
                        <p props="ios">Starting from this version, (5) <codeph>AgoraAudioOutputRoutingBluetooth</codeph> is renamed to indicate audio routing for Bluetooth devices using the HFP protocol, and (10) is added to indicate audio routing for Bluetooth devices using the A2DP protocol.<codeph><apiname keyref="AudioRoute"/></codeph><codeph><ph keyref="ROUTE_BLUETOOTH_DEVICE_HFP"/></codeph><codeph><ph keyref="ROUTE_BLUETOOTH_DEVICE_A2DP"/></codeph></p>
                        <p props="flutter rn">Starting from this version, (5)routeBluetooth in 中 has been renamed to indicate that the audio<codeph> route</codeph> is using HFP protocol for Bluetooth devices. Additionally, (10) has been added to indicate that the audio route is using A2DP protocol for Bluetooth devices.<codeph><apiname keyref="AudioRoute"/></codeph><codeph><ph keyref="ROUTE_BLUETOOTH_DEVICE_HFP"/></codeph><codeph><ph keyref="ROUTE_BLUETOOTH_DEVICE_A2DP"/></codeph></p>
                        <p props="rn">Starting from this version, (5)RouteBluetooth in 中 is renamed to indicate that the audio<codeph> route</codeph> is using HFP protocol for Bluetooth devices, and (10) is added to indicate that the audio route is using A2DP protocol for Bluetooth devices.<codeph><apiname keyref="AudioRoute"/></codeph><codeph><ph keyref="ROUTE_BLUETOOTH_DEVICE_HFP"/></codeph><codeph><ph keyref="ROUTE_BLUETOOTH_DEVICE_A2DP"/></codeph></p>
                    </li>
                    <li props="android"><ph><b>The state of the remote video:</b></ph><p>To make the name of the enumeration easier to understand, this version changes the name of the enumeration from <codeph>REMOTE_VIDEO_STATE_PLAYING</codeph> to [new name], while the meaning of the enumeration remains unchanged.<codeph><ph keyref="REMOTE_VIDEO_STATE_DECODING"/></codeph></p>
                    </li>
                    <li><ph><b>Local video state error codes</b></ph><p>This version has made the following modifications to the enumerations in the enumeration class:<codeph><apiname keyref="LOCAL_VIDEO_STREAM_REASON"/></codeph><ul>
                        <li props="cpp electron unity flutter">The value of (original) changed from 23 to 28. <codeph><apiname keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_PAUSED"/></codeph><codeph><apiname keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_PAUSED"/></codeph>(Windows)</li>
                        <li props="cpp electron unity flutter">The value of (original) changed from 24 to 29. <codeph><apiname keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_RESUMED"/></codeph><codeph><apiname keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_RESUMED"/></codeph>(Windows)</li>
                        <li>The enumeration name has been changed to .<codeph><apiname keyref="LOCAL_VIDEO_STREAM_REASON_CODEC_NOT_SUPPORT"/></codeph><codeph><apiname keyref="LOCAL_VIDEO_STREAM_REASON_CODEC_NOT_SUPPORT"/></codeph></li>
                        </ul></p>
                    </li>
                </ol>
            </body>
        </topic>
        <topic id="newfeature">
            <title>New features</title>
            <body>
                <ol>
                    <li><ph><b>Customized layout for the receiving end</b></ph><p>To support the layout of custom multi-stream images on the video mixing end, this version has added callbacks. <codeph><xref keyref="onTranscodedStreamLayoutInfo"/></codeph>When the receiver receives the channel's video mixing video stream sent by the video mixing server, this callback will be triggered, reporting the layout information of the video mixing video stream and the layout information of each sub-video stream in the mixed stream. The receiver can set a separate view for rendering<xref keyref="setupRemoteVideo"/> the sub-video stream (distinguished by <codeph>subviewUid</codeph>) in the merged video stream when calling the method, achieving a custom video layout effect.<codeph></codeph></p>
                        <p>When the layout of the sub-video streams in the merged video stream changes, this callback will also be triggered to report the latest layout information in real time.</p>
                        <p>Through this feature, the receiving end can flexibly adjust the local view layout. When applied in a multi-person video scenario, the receiving end only needs to receive and decode a video mixing video stream, which can effectively reduce the CPU usage and network bandwidth when decoding multiple video streams on the receiving end.</p>
                    </li>
                    <li><ph><b>Multiple View Local Preview</b></ph><p>This version supports previewing multiple screens simultaneously locally, and the videos displayed in the screens are at different observation positions on the video link. Examples of usage are as follows:<ol>
                        <li>Call: Set the first view: Set the <codeph>position</codeph> parameter in  to (this enumeration is newly added in this version), corresponding to the position after local video capture and before pre-processing. The observed video here does not have the effect of pre-processing.<codeph><xref keyref="setupLocalVideo"/></codeph><codeph><apiname keyref="VideoCanvas"/></codeph><codeph><apiname keyref="POSITION_POST_CAPTURER_ORIGIN"/></codeph></li>
                        <li>Call set the second view: set the <codeph>position</codeph> parameter in to , the observed video here has the effect of video preprocessing.<codeph><xref keyref="setupLocalVideo"/></codeph><codeph><apiname keyref="VideoCanvas"/></codeph><codeph><apiname keyref="POSITION_POST_CAPTURER"/></codeph></li>
                        <li>Observe the local preview effect: View one is the original video of a real person; view two is the virtual portrait after video preprocessing (including beauty, virtual background, and local preview of watermarks) effect.</li>
                        </ol></p>
                    </li>
                    <li><ph><b>Device Rating Level Query</b></ph><p>This version adds a method to query the rating level of the device to ensure that the parameters set by the user do not exceed the capabilities of their device. <codeph><xref keyref="queryDeviceScore"/></codeph>For example, in high-definition or ultra-high-definition video scenarios, you can first call this method to query the device's rating score. If the returned score is low (such as below 60), it is necessary to appropriately lower the video resolution to avoid affecting the video experience. Different business scenarios require different minimum device rating levels. Please refer to the specific rating recommendations<xref keyref="ticket-link"/>.</p>
                    </li>
                    <li><ph><b>Local playback and remote distribution of audio track control</b></ph><p><ph>This version adds a method to support setting separate audio tracks for local playback and sending to the remote end. <codeph><xref keyref="selectMultiAudioTrack"/></codeph>In karaoke and other similar scenarios, the host can choose to play one audio track locally (such as the original sound) and send another audio track to the remote end (such as the accompaniment) to enhance listener experience. </ph><ph>Before using this feature, you need to open the media file and enable track control through the newly added <codeph>enableMultiAudioTrack</codeph> member in .</ph><codeph><xref keyref="openWithMediaSource"/></codeph><codeph><xref keyref="MediaSource"/></codeph></p>
                    </li>
                    <li props="android"><ph><b>Audio playback device test</b></ph><p>This version adds a method to test if the audio playback device is working properly before joining the channel. <codeph><xref keyref="startPlaybackDeviceTest"/></codeph>You can specify the audio file to be played through the <codeph>testAudioFilePath</codeph> parameter. If the tester can hear the sound, it means that the playback device is working properly. After the test is completed, you need to call the newly added method to stop the test.<codeph><xref keyref="stopPlaybackDeviceTest"/></codeph></p>
                    </li>
                    <li props="ios"><ph><b>Audio playback device test</b></ph><p>This version adds the following methods to test whether the audio capture or playback devices work properly before joining a channel:<ul>
                            <li>Call the startPlaybackDeviceTest method to test whether the local audio playback device, such as the speaker, is working properly. <codeph><xref keyref="startRecordingDeviceTest"/></codeph>After calling this method, the SDK triggers the  callback at the time interval set in this method, which reports uid = 0 and the volume information of the capturing device. After the test is completed, you need to call the newly added method to stop the test.<codeph><xref keyref="stopRecordingDeviceTest"/></codeph></li>
                            <li>: Used to test if the audio playback device is working properly before joining the channel. <codeph><xref keyref="startPlaybackDeviceTest"/></codeph>You can specify the audio file to be played through the <codeph>testAudioFilePath</codeph> parameter. If the tester can hear the sound, it means that the playback device is working properly. After the test is completed, you need to call the newly added method to stop the test.<codeph><xref keyref="stopPlaybackDeviceTest"/></codeph></li>
                        </ul></p>
                    </li>
                    <li><ph><b>Others</b></ph><p>This version has passed the test verification of the following APIs and can be applied to the entire series of RTC 4.x SDK.<ul>
                        <li>Sets the fallback option for the remotely subscribed video stream based on the network conditions.<codeph><xref keyref="setRemoteSubscribeFallbackOption"/></codeph></li>
                        <li>: The subscription stream has been downgraded to an audio stream or restored to an audio-video stream callback.<codeph><xref keyref="onRemoteSubscribeFallbackToAudioOnly"/></codeph></li>
                        <li props="cpp flutter unity electron"><ph props="flutter unity electron">(Windows)</ph><ph>: Adjust the volume of the playback device.</ph><ph><codeph><xref keyref="setPlaybackDeviceVolume"/></codeph></ph></li>
                            <li><ph props="flutter unity cs bp unreal electron">(Windows)</ph><ph>: Get the volume of the audio capture device.</ph><ph><codeph><xref keyref="getRecordingDeviceVolume"/></codeph></ph></li>
                            <li>Sets the private options for the media player.<codeph><xref keyref="setPlayerOption"/></codeph></li>
                        <li><codeph><apiname keyref="enableCustomAudioLocalPlayback"/></codeph>: Sets whether to enable the local playback of external audio source.</li>
                        </ul></p>
                    </li>
                </ol>
            </body>
        </topic>
        <topic id="improvement">
            <title>Improvements</title>
            <body>
                <ol>
                    <li><ph><b>In-ear monitoring volume boost</b></ph><p>This release provides users with more flexible in-ear monitoring audio adjustment options, supporting the ability to set the in-ear monitoring volume to four times the original volume by calling <codeph><apiname keyref="setInEarMonitoringVolume"/></codeph>.</p>
                    </li>
                    <li><ph><b>Dual-stream mode optimization</b></ph><p>This release optimizes the video dual-stream mode. In the low-quality video stream adaptive mode (<codeph><apiname keyref="AUTO_SIMULCAST_STREAM"/></codeph>), when the receiver requests a low-quality video stream by calling <codeph><apiname keyref="setRemoteVideoStreamType"/></codeph> or <codeph><apiname keyref="setRemoteVideoStreamTypeEx"/></codeph>, the sender no longer restricts the identity of the request source to be the broadcaster. This adjustment ensures that the audience‘s request for a low-quality video stream takes effect, improving the flexibility and adaptability of the low-quality video stream mode.</p>
                    </li>
                    <li><ph><b>Improved spatial audio effect</b></ph><ul>
                        <li>This version optimizes the design of the method, supporting setting the <codeph>zones</codeph> parameter to <codeph>NULL</codeph>, which means clearing all soundproof areas.<codeph><apiname keyref="setZones"/></codeph></li>
                        <li>Starting from this version, it is not necessary to unsubscribe from all remote users' audio streams within the channel before calling the method.<codeph><apiname keyref="LocalSpatialAudioEngine"/></codeph></li>
                        <li props="ios">This version adds a method to pass position vectors directly to native iOS frameworks such as SceneKit or RealityKit for rendering.<codeph><apiname keyref="updateSelfTransform"/></codeph></li>
                        </ul> </li>
                    <li props="apple"><ph><b>Local audio state callback optimization</b></ph><p>This version adds the following enumerations in Chinese, users can learn more about the reasons for local audio errors through callbacks:<codeph><apiname keyref="LOCAL_AUDIO_STREAM_REASON"/></codeph><codeph><apiname keyref="onLocalAudioStateChanged"/></codeph><ul>
                        <li props="mac">No recording device is available. <codeph><apiname keyref="LOCAL_AUDIO_STREAM_REASON_NO_RECORDING_DEVICE"/></codeph>Remind your users to check whether the microphone is connected to the device properly in the control plane of the device or if the microphone is working properly.</li>
                        <li props="mac">No playback device is available. <codeph><apiname keyref="LOCAL_AUDIO_STREAM_REASON_NO_PLAYOUT_DEVICE"/></codeph>Remind your users to check whether the speaker is connected to the device properly in the control plane of the device or if the speaker is working properly.</li>
                        <li props="ios">8: The local audio capture is interrupted by system calls, Siri, or alarm clocks. <codeph><apiname keyref="LOCAL_AUDIO_STREAM_REASON_INTERRUPTED"/></codeph>Remind your users to end the phone call, Siri, or alarm clock if the local audio capture is required.</li>
                        </ul></p>
                    </li>
                    <li props="android ios"><ph><b>Optimization of video pre-processing methods</b></ph><p>This version adds overloaded methods with the <codeph>souceType </codeph>parameter for the following 5 video preprocessing methods, which support specifying the media source type for applying video preprocessing effects by passing in <codeph>sourceType</codeph> (for example, applying on a custom video capture media source):</p>
                        <ul>
                            <li><codeph><xref keyref="setBeautyEffectOptions2"/></codeph></li>
                            <li><codeph><xref keyref="setLowlightEnhanceOptions2"/></codeph></li>
                            <li><codeph><xref keyref="setVideoDenoiserOptions2"/></codeph></li>
                            <li><codeph><xref keyref="setColorEnhanceOptions2"/></codeph></li>
                            <li><codeph><xref keyref="enableVirtualBackground2"/></codeph></li>
                        </ul>
                    </li>
                    <li><ph><b>Improvements name</b></ph><p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b>Other Improvements</b></ph><p>This release includes the following additional improvements:<ul>
                        <li>Optimizing the algorithm of the video module and reducing the bandwidth requirements during video transmission, it provides users with a better video experience while keeping the network environment unchanged.</li>
                        <li props="android">Add a new member called<codeph> codecType</codeph> to set the video encoding type.<codeph><apiname keyref="VideoEncoderConfiguration"/></codeph></li>
                        <li props="android">Add a new member called <codeph>allowCaptureCurrentApp</codeph>, which is used to set whether to capture audio from the current app during screen sharing. <codeph><apiname keyref="AudioCaptureParameters"/></codeph>The default value of this member is , which means it will collect the audio from the current app by default. <codeph><apiname keyref="true"/></codeph>In certain scenarios, the shared screen audio captured by the app may cause echo on the remote side due to signal delay and other reasons. Agora suggests setting this member as  to eliminate the remote echo introduced during the screen sharing process.<codeph><apiname keyref="false"/></codeph></li>
                        <li props="cpp unity flutter electron">Add an enumeration in the callback to indicate unexpected errors that occur during the screen sharing process (possibly due to window blocking failure), resulting in performance degradation, but the screen sharing process itself is not affected. <codeph><apiname keyref="onLocalVideoStateChanged"/></codeph><codeph><apiname keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_AUTO_FALLBACK"/></codeph>(Windows)</li>
                        <li>This version optimizes the domain name resolution strategy of the SDK, improving the stability of calling and resolving domain names in complex network environments.<codeph><apiname keyref="setLocalAccessPoint"/></codeph></li>
                        <li>When a picture with a transparent background is passed as a custom background image for virtual background, it supports customizing the fill color of the transparent background.</li>
                        <li>Add <codeph>earMonitorDelay</codeph> and <codeph>aecEstimatedDelay</codeph> members, respectively used to report ear in-ear monitoring delay and Acoustic Echo Cancellation (AEC) delay.<codeph><apiname keyref="LocalAudioStats"/></codeph></li>
                        <li props="mac">When using the sound card for recording, it supports capturing audio data in stereo.</li>
                        <li>Add callback, when the media resource starts caching, the SDK will trigger this callback once per second, reporting the relevant data of the currently cached media resource.<codeph><xref keyref="onPlayerCacheStats"/></codeph></li>
                        <li>Add callback, when the media resource starts playing, the SDK will trigger this callback once per second, reporting the relevant information of the currently playing media resource. <codeph><xref keyref="onPlayerPlaybackStats"/></codeph>You can obtain the current bitrate and other information of the audio and video through .<codeph><xref keyref="PlayerPlaybackStats"/></codeph></li>
                        <li props="ios android unity rn flutter">Added a new status code to indicate an internal error in HTTP. Please try again later. <ph></ph><codeph><xref keyref="MusicContentCenterStateReason"/></codeph><codeph><apiname keyref="kMusicContentCenterReasonHttpInternalError"/></codeph><ph props="unity flutter">(Android, iOS)</ph></li>
                        </ul></p>
                    </li>
                </ol>
            </body>
        </topic>
        <topic id="bugfix">
            <title>Issues fixed</title>
            <body>
                <p>This release fixed the following issues:</p>
                <ul>
                    <li>When sharing two screen sharing video streams simultaneously, the reported captureFrameRate in the callback is 0, which is not as expected.<codeph><apiname keyref="onLocalVideoStats"/></codeph><codeph></codeph></li>
                    <li props="cpp unity flutter electron">When sharing in a specified screen area, the mouse coordinates within the shared area are inaccurate. When the mouse is near the border of the shared area, the mouse may not be visible in the shared screen. (Windows)</li>
                    <li props="cpp unity flutter electron"><ph>After multiple insertions and removals of the 3.5mm headphone, the SDK failed to detect any changes in the audio routing. </ph>(Windows)<ph props="unity flutter electron"></ph></li>
                    <li props="android">In a meeting scenario, there are occasional lags when listening to remote users.</li>
                </ul>
            </body>
        </topic>
        <topic id="apichange">
            <title>API changes</title>
            <body>
                <p><b>Added</b><ul>
                        <li><codeph><xref keyref="onTranscodedStreamLayoutInfo"/></codeph></li>
                        <li><codeph><xref keyref="VideoLayout"/></codeph></li>
                        <li>Add <codeph>subviewUid</codeph> member<codeph><xref keyref="VideoCanvas"/></codeph></li>
                        <li props="android">Add <codeph>codecType</codeph> member<codeph><xref keyref="VideoEncoderConfiguration"/></codeph></li>
                        <li props="android">Add the member <codeph>allowCaptureCurrentApp</codeph>.<codeph><xref keyref="AudioCaptureParameters"/></codeph></li>
                        <li props="ios"><codeph><xref keyref="updateSelfTransform"/></codeph></li>
                        <li props="apple">The following enumerations in :<codeph><xref keyref="LOCAL_AUDIO_STREAM_REASON"/></codeph><ul>
                                <li props="mac"><codeph><apiname keyref="LOCAL_AUDIO_STREAM_REASON_NO_RECORDING_DEVICE"/></codeph></li>
                                <li props="mac"><codeph><apiname keyref="LOCAL_AUDIO_STREAM_REASON_NO_PLAYOUT_DEVICE"/></codeph></li>
                                <li props="ios"><codeph><apiname keyref="LOCAL_AUDIO_STREAM_REASON_INTERRUPTED"/></codeph></li></ul></li>
                        <li><codeph><apiname keyref="enableCustomAudioLocalPlayback"/></codeph></li>
                        <li><codeph><apiname keyref="queryDeviceScore"/></codeph></li>
                        <li props="android ios"><codeph><xref keyref="setBeautyEffectOptions2"/></codeph></li>
                        <li props="android ios"><codeph><xref keyref="setLowlightEnhanceOptions2"/></codeph></li>
                        <li props="android ios"><codeph><xref keyref="setVideoDenoiserOptions2"/></codeph></li>
                        <li props="android ios"><codeph><xref keyref="setColorEnhanceOptions2"/></codeph></li>
                        <li props="android ios"><codeph><xref keyref="enableVirtualBackground2"/></codeph></li>
                        <li> in .<codeph><apiname keyref="AudioRoute"/></codeph><codeph><ph keyref="ROUTE_BLUETOOTH_DEVICE_A2DP"/></codeph></li>
                        <li props="android ios mac flutter unity rn">Add <codeph>earMonitorDelay</codeph> and <codeph>aecEstimatedDelay</codeph> members.<codeph><apiname keyref="LocalAudioStats"/></codeph></li>
                        <li><codeph><apiname keyref="selectMultiAudioTrack"/></codeph></li>
                        <li><codeph><apiname keyref="onPlayerCacheStats"/></codeph></li>
                        <li><codeph><apiname keyref="onPlayerPlaybackStats"/></codeph></li>
                        <li><codeph><apiname keyref="PlayerPlaybackStats"/></codeph></li>
                        <li props="android ios unity flutter rn"><ph props="unity flutter">(Android, iOS)</ph><codeph><apiname keyref="MusicContentCenterStateReason"/><apiname keyref="kMusicContentCenterReasonHttpInternalError"/></codeph></li>
                        <li props="android ios"><codeph><apiname keyref="startPlaybackDeviceTest"/></codeph></li>
                        <li props="android ios"><codeph><apiname keyref="stopPlaybackDeviceTest"/></codeph></li>
                    </ul></p>
                <p><b>Modify</b><ul>
                    <li props="android"><codeph>pushExternalVideoFrameEx</codeph>[1/2] and <codeph>pushExternalVideoFrameEx</codeph>[2/2] are renamed to <codeph>pushExternalVideoFrameById</codeph>[1/2] and <codeph>pushExternalVideoFrameById</codeph>[2/2], and are migrated from <codeph><apiname keyref="IRtcEngineEx"/></codeph> to <codeph><apiname keyref="IRtcEngine"/></codeph></li>
                    <li props="ios"><codeph>pushExternalVideoFrame</codeph>[1/2] is migrated from <codeph><apiname keyref="IRtcEngineEx"/></codeph> to <codeph><apiname keyref="IRtcEngine"/></codeph></li>
                    <li props="android"><codeph>REMOTE_VIDEO_STATE_PLAYING</codeph> enumeration name changed to<codeph><ph keyref="REMOTE_VIDEO_STATE_DECODING"/></codeph></li>
                    <li props="android unity"><codeph>ROUTE_BLUETOOTH</codeph> enumeration name changed to<codeph><ph keyref="ROUTE_BLUETOOTH_DEVICE_HFP"/></codeph></li>
                    <li props="ios"><codeph>AgoraAudioOutputRoutingBluetooth</codeph> enumeration name changed to<codeph><ph keyref="ROUTE_BLUETOOTH_DEVICE_HFP"/></codeph></li>
                    <li props="rn"><codeph>RouteBluetooth</codeph> enumeration name changed to<codeph><ph keyref="ROUTE_BLUETOOTH_DEVICE_HFP"/></codeph></li>
                    <li props="flutter"><codeph>routeBluetooth</codeph> enumeration name changed to<codeph><ph keyref="ROUTE_BLUETOOTH_DEVICE_HFP"/></codeph></li>
                    <li>All <codeph>ERROR </codeph>fields in the following enumeration names are changed to <codeph>REASON</codeph>:<ul>
                            <li><codeph><apiname keyref="LOCAL_AUDIO_STREAM_ERROR_OK"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_AUDIO_STREAM_ERROR_FAILURE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_AUDIO_STREAM_ERROR_DEVICE_NO_PERMISSION"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_AUDIO_STREAM_ERROR_DEVICE_BUSY"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_AUDIO_STREAM_ERROR_RECORD_FAILURE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_AUDIO_STREAM_ERROR_ENCODE_FAILURE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_AUDIO_STREAM_ERROR_NO_RECORDING_DEVICE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_AUDIO_STREAM_ERROR_NO_PLAYOUT_DEVICE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_AUDIO_STREAM_ERROR_INTERRUPTED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_AUDIO_STREAM_ERROR_RECORD_INVALID_ID"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_AUDIO_STREAM_ERROR_PLAYOUT_INVALID_ID"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_OK"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_FAILURE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_DEVICE_NO_PERMISSION"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_DEVICE_BUSY"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_CAPTURE_FAILURE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_ENCODE_FAILURE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_CAPTURE_INBACKGROUND"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_CAPTURE_MULTIPLE_FOREGROUND_APPS"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_DEVICE_NOT_FOUND"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_DEVICE_DISCONNECTED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_DEVICE_INVALID_ID"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_MINIMIZED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_CLOSED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_OCCLUDED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_NOT_SUPPORTED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_NO_PERMISSION"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_PAUSED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_RESUMED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_HIDDEN"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_RECOVER_FROM_HIDDEN"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_RECOVER_FROM_MINIMIZED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_FAILURE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="LOCAL_VIDEO_STREAM_ERROR_DEVICE_SYSTEM_PRESSURE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="DIRECT_CDN_STREAMING_ERROR_OK"></apiname></codeph></li>
                            <li><codeph><apiname keyref="DIRECT_CDN_STREAMING_ERROR_FAILED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="DIRECT_CDN_STREAMING_ERROR_AUDIO_PUBLICATION"></apiname></codeph></li>
                            <li><codeph><apiname keyref="DIRECT_CDN_STREAMING_ERROR_VIDEO_PUBLICATION"></apiname></codeph></li>
                            <li><codeph><apiname keyref="DIRECT_CDN_STREAMING_ERROR_NET_CONNECT"></apiname></codeph></li>
                            <li><codeph><apiname keyref="DIRECT_CDN_STREAMING_ERROR_BAD_NAME"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_NONE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_INVALID_ARGUMENTS"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_INTERNAL"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_NO_RESOURCE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_INVALID_MEDIA_SOURCE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_UNKNOWN_STREAM_TYPE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_OBJ_NOT_INITIALIZED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_CODEC_NOT_SUPPORTED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_VIDEO_RENDER_FAILED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_INVALID_STATE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_URL_NOT_FOUND"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_INVALID_CONNECTION_STATE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_SRC_BUFFER_UNDERFLOW"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_INTERRUPTED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_NOT_SUPPORTED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_TOKEN_EXPIRED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_IP_EXPIRED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="PLAYER_ERROR_UNKNOWN"></apiname></codeph></li>
                            <li><codeph><apiname keyref="RTMP_STREAM_PUBLISH_ERROR_OK"></apiname></codeph></li>
                            <li><codeph><apiname keyref="RTMP_STREAM_PUBLISH_ERROR_INVALID_ARGUMENT"></apiname></codeph></li>
                            <li><codeph><apiname keyref="RTMP_STREAM_PUBLISH_ERROR_ENCRYPTED_STREAM_NOT_ALLOWED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="RTMP_STREAM_PUBLISH_ERROR_CONNECTION_TIMEOUT"></apiname></codeph></li>
                            <li><codeph><apiname keyref="RTMP_STREAM_PUBLISH_ERROR_INTERNAL_SERVER_ERROR"></apiname></codeph></li>
                            <li><codeph><apiname keyref="RTMP_STREAM_PUBLISH_ERROR_RTMP_SERVER_ERROR"></apiname></codeph></li>
                            <li><codeph><apiname keyref="RTMP_STREAM_PUBLISH_ERROR_TOO_OFTEN"></apiname></codeph></li>
                            <li><codeph><apiname keyref="RTMP_STREAM_PUBLISH_ERROR_REACH_LIMIT"></apiname></codeph></li>
                            <li><codeph><apiname keyref="RTMP_STREAM_PUBLISH_ERROR_NOT_AUTHORIZED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="RTMP_STREAM_PUBLISH_ERROR_STREAM_NOT_FOUND"></apiname></codeph></li>
                            <li><codeph><apiname keyref="RTMP_STREAM_PUBLISH_ERROR_FORMAT_NOT_SUPPORTED"></apiname></codeph></li>
                            <li><codeph><apiname keyref="RTMP_STREAM_PUBLISH_ERROR_NOT_BROADCASTER"></apiname></codeph></li>
                            <li><codeph><apiname keyref="RTMP_STREAM_PUBLISH_ERROR_TRANSCODING_NO_MIX_STREAM"></apiname></codeph></li>
                            <li><codeph><apiname keyref="RTMP_STREAM_PUBLISH_ERROR_NET_DOWN"></apiname></codeph></li>
                            <li><codeph><apiname keyref="RTMP_STREAM_PUBLISH_ERROR_INVALID_PRIVILEGE"></apiname></codeph></li>
                            <li><codeph><apiname keyref="RTMP_STREAM_UNPUBLISH_ERROR_OK"></apiname></codeph></li>
                            </ul></li>
                        <li props="ios android flutter unity rn">Change to, all occurrences of the enum name "<codeph>StatusErr</codeph>" should be changed to "Reason":<ph><ph props="unity flutter"> (Android, iOS)</ph></ph><codeph><apiname keyref="MusicContentCenterStatusErrCode"/></codeph><codeph><apiname keyref="MusicContentCenterStateReason"/></codeph><codeph></codeph><ul>
                            <li><codeph><apiname keyref="kMusicContentCenterStatusErrGateway"></apiname></codeph></li>
                            <li><codeph><apiname keyref="kMusicContentCenterStatusErrPermissionAndResource"></apiname></codeph></li>
                            <li><codeph><apiname keyref="kMusicContentCenterStatusErrInternalDataParse"></apiname></codeph></li>
                            <li><codeph><apiname keyref="kMusicContentCenterStatusErrMusicLoading"></apiname></codeph></li>
                            <li><codeph><apiname keyref="kMusicContentCenterStatusErrMusicDecryption"></apiname></codeph></li>
                        </ul></li>
                    <li>Change to<codeph><apiname keyref="kMusicContentCenterStatusErr"></apiname></codeph><codeph><apiname keyref="kMusicContentCenterStatusError"/></codeph></li>
                    </ul></p>
                <p><b>Deprecated</b><ul>
                    <li><apiname/></li>
                    </ul></p>
                <p><b>Deleted</b><ul>
                    <li><codeph><apiname keyref="startChannelMediaRelay"/></codeph></li>
                    <li><codeph><apiname keyref="updateChannelMediaRelay"/></codeph></li>
                    <li><codeph><apiname keyref="startChannelMediaRelayEx"/></codeph></li>
                    <li><codeph><apiname keyref="updateChannelMediaRelayEx"/></codeph></li>
                    <li><codeph><apiname keyref="onChannelMediaRelayEvent"/></codeph></li>
                    <li><codeph><apiname keyref="CHANNEL_MEDIA_RELAY_EVENT"/></codeph></li>
                    </ul></p>
            </body>
        </topic>
    </topic>
</topic>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_lastmileprobeconfig">
    <title><ph keyref="LastmileProbeConfig" /></title>
    <shortdesc id="short"><ph id="shortdesc">Configurations of the last-mile network test.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock" props="rtc-ng">
                <codeblock props="unity" outputclass="language-csharp">public class LastmileProbeConfig
    {
        public LastmileProbeConfig()
        {
        }
        public LastmileProbeConfig(bool probeUplink, bool probeDownlink, uint expectedUplinkBitrate,
            uint expectedDownlinkBitrate)
        {
            this.probeUplink = probeUplink;
            this.probeDownlink = probeDownlink;
            this.expectedUplinkBitrate = expectedUplinkBitrate;
            this.expectedDownlinkBitrate = expectedDownlinkBitrate;
        }
        
        public bool probeUplink { set; get; }
        
        public bool probeDownlink { set; get; }
        
        public uint expectedUplinkBitrate { set; get; }
        
        public uint expectedDownlinkBitrate { set; get; }
    }
    
    public enum LASTMILE_PROBE_RESULT_STATE {
        
        LASTMILE_PROBE_RESULT_COMPLETE = 1,
        
        LASTMILE_PROBE_RESULT_INCOMPLETE_NO_BWE = 2,
        
        LASTMILE_PROBE_RESULT_UNAVAILABLE = 3
    };
    
    public class LastmileProbeOneWayResult
    {
        public LastmileProbeOneWayResult()
        {
        }
        public LastmileProbeOneWayResult(uint packetLossRate, uint jitter, uint availableBandwidth)
        {
            this.packetLossRate = packetLossRate;
            this.jitter = jitter;
            this.availableBandwidth = availableBandwidth;
        }
        
        public uint packetLossRate { set; get; }
        
        public uint jitter { set; get; }
        
        public uint availableBandwidth { set; get; }
    }
    
    public class LastmileProbeResult
    {
        public LastmileProbeResult()
        {
        }
        public LastmileProbeResult(LASTMILE_PROBE_RESULT_STATE state, LastmileProbeOneWayResult uplinkReport,
            LastmileProbeOneWayResult downlinkReport, uint rtt)
        {
            this.state = state;
            this.uplinkReport = uplinkReport;
            this.downlinkReport = downlinkReport;
            this.rtt = rtt;
        }
        
        public LASTMILE_PROBE_RESULT_STATE state { set; get; }</codeblock>
            </p>
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public class LastmileProbeConfig {
  public boolean probeUplink;
  public boolean probeDownlink;
  public int expectedUplinkBitrate;
  public int expectedDownlinkBitrate;

  public LastmileProbeConfig() {}
}</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraLastmileProbeConfig : NSObject
@property (assign, nonatomic) BOOL probeUplink;
@property (assign, nonatomic) BOOL probeDownlink;
@property (assign, nonatomic) NSUInteger expectedUplinkBitrate;
@property (assign, nonatomic) NSUInteger expectedDownlinkBitrate;
@end</codeblock>
                <codeblock props="windows unity" outputclass="language-cpp">struct LastmileProbeConfig {
    bool probeUplink;
    bool probeDownlink;
    unsigned int expectedUplinkBitrate;
    unsigned int expectedDownlinkBitrate;
    };</codeblock>
                <codeblock props="electron" outputclass="language-typescript">export interface LastmileProbeConfig {
    probeUplink: boolean;
    probeDownlink: boolean;
    expectedUplinkBitrate: number;
    expectedDownlinkBitrate: number;
    }</codeblock>
                <codeblock props="rn" outputclass="language-typescript" />
                <codeblock props="flutter" outputclass="language-dart">class LastmileProbeConfig {
  
  bool probeUplink;
  bool probeDownlink;
  int expectedUplinkBitrate;
  int expectedDownlinkBitrate;

  LastmileProbeConfig(
    this.probeUplink,
    this.probeDownlink,
    this.expectedUplinkBitrate,
    this.expectedDownlinkBitrate,
  );
}</codeblock>
            </p>
        </section>
        <section id="parameters">
   <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
   <parml>
       <plentry>
  <pt>probeUplink</pt>
  <pd><p>Sets whether to test the uplink network. Some users, for example, the audience members in a LIVE_BROADCASTING channel, do not need such a test.<ul>
 <li><codeph><ph keyref="true" /></codeph>: Test.</li>
 <li><codeph><ph keyref="false" /></codeph>: Not test.</li>
      </ul>
      </p>
  </pd>
       </plentry>
       <plentry>
  <pt>probeDownlink</pt>
  <pd>
      <p>Sets whether to test the downlink network:<ul>
     <li><codeph><ph keyref="true" /></codeph>: Test.</li>
     <li><codeph><ph keyref="false" /></codeph>: Not test.</li>
 </ul>
      </p>
  </pd>
       </plentry>
       <plentry>
  <pt>expectedUplinkBitrate</pt>
  <pd>The expected maximum uplink bitrate (bps) of the local user. The value range is [100000, 5000000]. Agora recommends referring to <xref keyref="setVideoEncoderConfiguration" /> to set the value.</pd>
       </plentry>
       <plentry>
  <pt>expectedDownlinkBitrate</pt>
  <pd>The expected maximum downlink bitrate (bps) of the local user. The value range is [100000,5000000].</pd>
       </plentry>
   </parml>
        </section></refbody>
</reference>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_externalvideoframe">
    <title><ph keyref="ExternalVideoFrame"/></title>
    <shortdesc id="short"><ph id="shortdesc">The external video frame.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public class AgoraVideoFrame { public static final int FORMAT_NONE = -1; public static final int FORMAT_TEXTURE_2D = 10; public static final int FORMAT_TEXTURE_OES = 11; public static final int FORMAT_I420 = 1; public static final int FORMAT_BGRA = 2; public static final int FORMAT_NV21 = 3; public static final int FORMAT_RGBA = 4; public static final int BUFFER_TYPE_NONE = -1;/ public static final int BUFFER_TYPE_BUFFER = 1; public static final int BUFFER_TYPE_ARRAY = 2; public static final int BUFFER_TYPE_TEXTURE = 3; public int format; public long timeStamp; public int stride; public int height; public int textureID; public boolean syncMode; public float[] transform; public javax.microedition.khronos.egl.EGLContext eglContext11; public android.opengl.EGLContext eglContext14; public byte[] buf; public int cropLeft; public int cropTop; public int cropRight; public int cropBottom; public int rotation; }</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility(&quot;default&quot;))) @interface AgoraVideoFrame : NSObject @property(assign, nonatomic) NSInteger format; @property(assign, nonatomic) CMTime time; @property(assign, nonatomic) int stride DEPRECATED_MSG_ATTRIBUTE(&quot;use strideInPixels instead&quot;); @property(assign, nonatomic) int strideInPixels; @property(assign, nonatomic) int height; @property(assign, nonatomic) CVPixelBufferRef _Nullable textureBuf; @property(assign, nonatomic) int cropLeft; @property(assign, nonatomic) int cropTop; @property(assign, nonatomic) int cropRight; @property(assign, nonatomic) int cropBottom; @property(assign, nonatomic) int rotation; @end</codeblock>
                <codeblock props="windows" outputclass="language-cpp">struct ExternalVideoFrame { enum VIDEO_BUFFER_TYPE { VIDEO_BUFFER_RAW_DATA = 1, }; enum VIDEO_PIXEL_FORMAT { VIDEO_PIXEL_UNKNOWN = 0, VIDEO_PIXEL_I420 = 1, VIDEO_PIXEL_BGRA = 2, VIDEO_PIXEL_NV21 = 3, VIDEO_PIXEL_RGBA = 4, VIDEO_PIXEL_IMC2 = 5, VIDEO_PIXEL_ARGB = 7, VIDEO_PIXEL_NV12 = 8, VIDEO_PIXEL_I422 = 16, }; VIDEO_BUFFER_TYPE type; VIDEO_PIXEL_FORMAT format; void* buffer; int stride; int height; int cropLeft; int cropTop; int cropRight; int cropBottom; int rotation; long long timestamp; };</codeblock>
                <codeblock props="electron" outputclass="language-typescript"/>
                <codeblock props="unity" outputclass="language-csharp"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
            </p>
        </section>
        <section id="parameters">
   <title><text conref="../conref/conref_api_metadata.dita#metadata/property"/></title>
   <parml>
       <plentry props="windows">
  <pt>type</pt>
  <pd>
      <p>The buffer type. For details, see <xref keyref="VIDEO_BUFFER_TYPE"/>.</p>
      </pd>
       </plentry>
       <plentry>
  <pt>format</pt>
           <pd props="windows">The pixel format. For details, see <xref keyref="VIDEO_PIXEL_FORMAT"/>.</pd>
           <pd props="ios mac">传入的视频帧的格式，必须指定为下面的某一个值：<ul>
                   <li>1: The format is I420.</li>
                   <li>2: The format is BGRA.</li>
                   <li>3: The format is NV21.</li>
                   <li>2: RGBA.</li>
                   <li>5: The format is IMC2.</li>
                   <li>7: The format is ARGB.</li>
                   <li>8: The format is NV12.</li>
                   <li>12: iOS 纹理 (CVPixelBufferRef)。</li>
               </ul>
           </pd>
           <pd props="android">视频数据的格式：<ul>
                   <li>10：TEXTURE_2D。</li>
                   <li>11：TEXTURE_OES，通常摄像头采集的数据为这种格式。</li>
                   <li>1：I420。</li>
                   <li>3：NV21。</li>
                   <li>4：RGBA。</li>
               </ul>
               </pd>
       </plentry>
       <plentry props="android windows">
  <pt props="windows">buffer</pt>
  <pt props="android">buf</pt>
  <pd>The video buffer.</pd>
  <pd props="android">该参数仅适用于非 Texture 格式的视频数据。</pd>
       </plentry>
       <plentry props="ios mac">
           <pt>textureBuf</pt>
           <pd>iOS 纹理的 Buffer。</pd>
       </plentry>
       <plentry>
  <pt>stride</pt>
  <pd>Line spacing of the incoming video frame, which must be in pixels instead of bytes. For textures, it is the width of the texture.<p props="ios mac">
          <dl outputclass="deprecated">
              <dlentry>
                  <dt>Deprecated:</dt>
                  <dd>用 strideInPixels 代替。</dd>
              </dlentry>
          </dl>
      </p>       
       </pd>
       </plentry>
       <plentry props="ios mac">
           <pt>strideInPixels</pt>
           <pd>该帧的行跨度，即相邻两行视频帧之间的像素点数。<note type="attention">
               <ul>
                   <li>该参数单位为像素，不是字节数。</li>
                   <li>如果视频为 Texture 格式，则将该参数设为 Texture 的宽度。</li>
                   <li>如果视频帧格式设为 12，则不使用该字段。</li>
               </ul>
           </note></pd>
       </plentry>
       <plentry>
  <pt>height</pt>
  <pd>Height of the incoming video frame.</pd>
       </plentry>
                <plentry props="android">
                    <pt>textureID</pt>
                    <pd>该帧的 Texture ID。 该参数仅适用于 Texture 格式的视频数据。</pd>
                </plentry>
                <plentry props="android">
                    <pt>syncMode</pt>
                    <pd>设置是否开启同步模式，开启后 SDK 会在 Texture 处理时进行等待。 该参数仅适用于 Texture 格式的视频数据。<ul
                            id="ul_oxx_wmy_4qb">
                        <li><codeph><ph keyref="true"/></codeph>：开启同步模式。</li>
                        <li><codeph><ph keyref="false"/></codeph>：不开启同步模式。</li>
                        </ul></pd>
                </plentry>
       <plentry props="android">
                    <pt>transform</pt>
           <pd>Texture 帧额外的转换。 该参数仅适用于 Texture 格式的视频数据。</pd>
                </plentry>
       <plentry props="android">
                    <pt>eglContext11</pt>
           <pd>EGLContext11。 该参数仅适用于 Texture 格式的视频数据。</pd>
                </plentry>
       <plentry props="android">
                    <pt>eglContext14</pt>
           <pd>EGLContext14。 该参数仅适用于 Texture 格式的视频数据。</pd>
                </plentry>
       <plentry>
  <pt>cropLeft</pt>
  <pd>Raw data related parameter. The number of pixels trimmed from the left. The default value is 0.</pd>
           <pd props="android">该参数仅适用于非 Texture 格式的视频数据。</pd>
       </plentry>
       <plentry>
  <pt>cropTop</pt>
  <pd>Raw data related parameter. The number of pixels trimmed from the top. The default value is 0.</pd>
           <pd props="android">该参数仅适用于非 Texture 格式的视频数据。</pd>
       </plentry>
       <plentry>
  <pt>cropRight</pt>
  <pd>Raw data related parameter. The number of pixels trimmed from the right. The default value is 0.</pd>
           <pd props="android">该参数仅适用于非 Texture 格式的视频数据。</pd>
       </plentry>
       <plentry>
  <pt>cropBottom</pt>
  <pd>Raw data related parameter. The number of pixels trimmed from the bottom. The default value is 0.</pd>
           <pd props="android">该参数仅适用于非 Texture 格式的视频数据。</pd>
       </plentry>
       <plentry>
  <pt>rotation</pt>
  <pd>Raw data related parameter. The clockwise rotation of the video frame. You can set the rotation angle as 0, 90, 180, or 270. The default value is 0.</pd>
       </plentry>
       <plentry>
  <pt props="android windows">timestamp</pt>
           <pt props="ios mac">time</pt>
  <pd>Timestamp (ms) of the incoming video frame. An incorrect timestamp results in frame loss or unsynchronized audio and video.</pd>
       </plentry>
   </parml>
        </section></refbody>
</reference>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_beautyoptions">
    <title>
        <ph keyref="BeautyOptions" />
    </title>
    <shortdesc id="short">
        <ph id="shortdesc">Image enhancement options.</ph>
    </shortdesc>
    <refbody>
        <section id="prototype">
            <p props="rtc-ng" outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class BeautyOptions {
  public static final int LIGHTENING_CONTRAST_LOW = 0;
  public static final int LIGHTENING_CONTRAST_NORMAL = 1;
  public static final int LIGHTENING_CONTRAST_HIGH = 2;

  public int lighteningContrastLevel;
  public float lighteningLevel;
  public float smoothnessLevel;
  public float rednessLevel;
  public float sharpnessLevel;
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraBeautyOptions : NSObject

@property(nonatomic, assign) AgoraLighteningContrastLevel lighteningContrastLevel;
@property(nonatomic, assign) float lighteningLevel;
@property(nonatomic, assign) float smoothnessLevel;
@property(nonatomic, assign) float rednessLevel;
@property(nonatomic, assign) float sharpnessLevel;
@end</codeblock>
            <codeblock props="windows" outputclass="language-cpp">struct BeautyOptions {
    enum LIGHTENING_CONTRAST_LEVEL {
        LIGHTENING_CONTRAST_LOW = 0,
        LIGHTENING_CONTRAST_NORMAL,
        LIGHTENING_CONTRAST_HIGH
    };
    LIGHTENING_CONTRAST_LEVEL lighteningContrastLevel;
    float lighteningLevel;
    float smoothnessLevel;
    float rednessLevel;
    float sharpnessLevel;
    BeautyOptions(LIGHTENING_CONTRAST_LEVEL contrastLevel, float lightening, float smoothness, float redness, float sharpness) : lighteningContrastLevel(contrastLevel), lighteningLevel(lightening), smoothnessLevel(smoothness), rednessLevel(redness), sharpnessLevel(sharpness) {}
    BeautyOptions() : lighteningContrastLevel(LIGHTENING_CONTRAST_NORMAL), lighteningLevel(0), smoothnessLevel(0), rednessLevel(0), sharpnessLevel(0) {}
};
</codeblock> </p>
            <p props="rtc" outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="windows unity" outputclass="language-cpp">struct BeautyOptions {
    enum LIGHTENING_CONTRAST_LEVEL
    {
        LIGHTENING_CONTRAST_LOW = 0,
        LIGHTENING_CONTRAST_NORMAL,
        LIGHTENING_CONTRAST_HIGH
    };

    LIGHTENING_CONTRAST_LEVEL lighteningContrastLevel;
    float lighteningLevel;
    float smoothnessLevel;
    float rednessLevel;

    BeautyOptions(LIGHTENING_CONTRAST_LEVEL contrastLevel, float lightening, float smoothness, float redness)
        : lighteningLevel(lightening),
        smoothnessLevel(smoothness),
        rednessLevel(redness),
        lighteningContrastLevel(contrastLevel) {}

    BeautyOptions()
        : lighteningLevel(0),
        smoothnessLevel(0),
        rednessLevel(0),
        lighteningContrastLevel(LIGHTENING_CONTRAST_NORMAL) {}
    };</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export interface BeautyOptions {
    lighteningContrastLevel: LIGHTENING_CONTRAST_LEVEL;
    lighteningLevel: number;
    smoothnessLevel: number;
    rednessLevel: number;
    }</codeblock>
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart">class BeautyOptions {

  @JsonKey(includeIfNull: false)
  LighteningContrastLevel? lighteningContrastLevel;

  @JsonKey(includeIfNull: false)
  double? lighteningLevel;

  @JsonKey(includeIfNull: false)
  double? smoothnessLevel;

  @JsonKey(includeIfNull: false)
  double? rednessLevel;

  BeautyOptions({
    this.lighteningContrastLevel,
    this.lighteningLevel,
    this.smoothnessLevel,
    this.rednessLevel,
  });

  factory BeautyOptions.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$BeautyOptionsFromJson(json);

  Map&lt;String, dynamic&gt; toJson() =&gt; _$BeautyOptionsToJson(this);
}</codeblock> </p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
            <parml>
            <plentry>
                <pt>lighteningContrastLevel</pt>
                <pd>The contrast level. For details, see <xref keyref="LIGHTENING_CONTRAST_LEVEL" />.</pd>
            </plentry>
            <plentry props="rtc">
                <pt>lighteningLevel</pt>
                <pd props="android ios windows">The brightness level. The value ranges from 0.0 (original) to 1.0. The default value is <ph props="ios">0.7</ph><ph props="android">0.6</ph><ph props="windows">0.0</ph>. This parameter makes video whitening.</pd>
                <pd props="flutter unity">The brightness level. This parameter makes video whitening. The value ranges from 0.0 (original) to 1.0.
                   The default value varies according to the development platform: 0.6 on Android, 0.7 on iOS, and 0.0 on Windows.</pd>
            </plentry>
            <plentry props="rtc-ng">
                <pt>lighteningLevel</pt>
                <pd>
                    The brightness level. The value ranges from 0.0 (original) to 1.0. The default value is
                    <ph props="ios">0.7</ph>
                    <ph props="android">0.6</ph>
                    <ph props="windows">0.0</ph>
                    . This parameter makes video whitening.
                </pd>
            </plentry>
            <plentry props="rtc">
                <pt>smoothnessLevel</pt>
                <pd props="android ios windows">The smoothness level. The value ranges from 0.0 (original) to 1.0. The default value is <ph props="ios">0.5</ph><ph props="android">0.5</ph><ph props="windows">0.0</ph>. This parameter is usually used to remove blemishes.</pd>
                <pd props="flutter unity">The smoothness level. This parameter is usually used to remove blemishes.The value ranges from 0.0 (original) to 1.0.
                    The default value varies according to the development platform: 0.5 on Android, 0.5 on iOS, and 0.0 on Windows.</pd>
            </plentry>
            <plentry props="rtc-ng">
                <pt>smoothnessLevel</pt>
                <pd>
                    The smoothness level. The value ranges from 0.0 (original) to 1.0. The default value is
                    <ph props="ios">0.5</ph>
                    <ph props="android">0.5</ph>
                    <ph props="windows">0.0</ph>
                    . This parameter is usually used to remove blemishes.
                </pd>
            </plentry>
            <plentry props="rtc">
                <pt>rednessLevel</pt>
                <pd props="android ios windows">The redness level. The value ranges from 0.0 (original) to 1.0. The default value is <ph props="ios">0.1</ph><ph props="android">0.1</ph><ph props="windows">0.0</ph>. This parameter adjusts the red saturation level.</pd>
                <pd props="flutter unity">The redness level. This parameter adjusts the red saturation level. The value ranges from 0.0 (original) to 1.0.
                The default value varies according to the development platforms: 0.1 on Android, 0.1 on Android, and 0.0 on Windows.</pd>
            </plentry>
            <plentry props="rtc-ng">
                <pt>rednessLevel</pt>
                <pd>
                    The redness level. The value ranges from 0.0 (original) to 1.0. The default value is
                    <ph props="ios">0.1</ph>
                    <ph props="android">0.1</ph>
                    <ph props="windows">0.0</ph>
                    . This parameter adjusts the red saturation level.
                </pd>
            </plentry>
            <plentry props="rtc-ng">
                <pt>sharpnessLevel</pt>
                <pd>The sharpness level. The value ranges from 0.0 (original) to 1.0. The default value is <ph props="ios">0.1</ph><ph props="android">0.3</ph><ph props="windows">0.0</ph>.</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>